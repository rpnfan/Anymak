%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[112373 10468 40546 31326 95971 11003 17692 8971 112568 389 857 62380 27220 72583 95625 27654 3545 62562 50227 65598 28228 14579 490 245 1764 10180 28244 3809 2895 7]B/h1s[5614 1853 5009 2500 3804 1734 2027 591 7312 265 205 6744 3779 3636 2481 4081 874 2613 4959 2519 2006 1337 158 41 1199 332 0 0 0 0]B/h2a[[25 1282 2358 1787 241 632 2794 1206 1177 28 78 10727 4616 12155 138 1700 60 9053 3520 11312 898 1942 19 40 107 2842 5592 718 64 0][1769 1036 22 6 1425 1 1 4 2724 3 1 647 9 6 850 6 0 1120 15 7 600 2 2 0 64 1 34 6 0 0][7325 3 2628 52 3923 1 18 4770 5844 0 115 521 4 134 12032 9 133 1085 25 54 1284 1 0 0 20 3 72 13 182 0][4323 6 27 246 9277 8 15 7 10905 12 2 72 21 19 2946 7 0 647 51 5 1417 26 5 0 19 7 145 18 168 0][872 501 2005 2058 183 426 2533 20 1153 13 34 8073 2575 11104 418 457 130 14697 7850 3848 415 1171 54 89 58 820 5883 613 259 0][1997 2 5 0 1896 1028 24 1 2843 1 1 177 6 1 1449 6 0 730 7 29 686 0 0 0 1 0 28 3 0 0][1586 18 12 11 1472 2 1570 291 4611 1 2 2739 17 1330 1327 17 0 1450 9 10 892 1 3 0 7 0 115 10 0 0][2073 2 4 8 2511 0 1 0 2242 1 3 14 18 16 1563 4 1 21 9 25 47 2 6 0 7 1 54 12 2 1][8975 909 5951 1559 3495 1276 1499 10 32 12 58 8758 3584 12857 10578 936 26 1599 5739 6441 1080 2452 3 22 7 1636 5289 829 30 0][80 1 1 2 39 0 0 0 17 0 3 3 1 1 60 6 0 1 3 1 156 0 0 0 0 0 2 0 0 1][120 4 1 1 131 1 2 18 110 1 13 15 9 8 101 1 0 23 16 8 22 1 1 0 32 0 56 8 0 0][12332 102 507 281 8974 64 131 31 9331 4 20 8081 508 22 4840 207 3 5 153 2400 1469 192 2 1 45 109 168 27 1821 0][6845 1111 19 6 5827 3 3 3 3927 0 1 25 1079 7 4696 2357 3 6 35 6 811 1 6 1 19 1 104 18 4 1][7480 16 3740 3715 8665 749 1006 47 7094 7 61 43 17 2115 11676 19 495 32 1490 10591 1581 558 4 1 27 2091 236 40 150 0][106 769 2227 806 63 378 1784 20 761 8 87 6190 3834 17370 1310 1924 17 9418 4244 2386 177 2296 65 26 16 186 6614 771 25 1][4299 0 13 126 6149 2 7 34 2967 0 2 559 15 7 5103 1427 0 5519 78 32 1032 0 1 0 5 7 67 7 0 0][6 0 0 0 1 0 0 0 2 0 0 1 0 1 1 0 2 0 0 0 3505 0 0 0 0 0 9 0 0 0][11003 292 1423 1215 11990 113 535 7 11884 3 51 675 1362 1527 8052 208 19 1692 1737 3176 845 495 9 1 53 321 196 34 1 1][4441 121 3586 22 5421 308 51 153 7696 1 71 101 370 25 6829 2218 344 32 4413 9418 3016 208 8 1 18 3 302 45 16 0][12712 8 40 1 10130 7 13 85 10864 0 1 48 40 28 13712 15 0 5871 50 7066 2645 57 29 0 42 31 238 30 44 0][2180 542 574 647 2298 210 441 3 1314 5 19 1806 641 6669 1909 579 3 2594 1707 2844 1 166 2 28 9 353 45 8 13 0][2812 2 2 6 4364 0 0 0 3837 0 1 2 1 0 2433 1 0 168 8 1 236 537 1 0 3 0 48 7 9 0][87 4 3 1 96 2 2 4 62 0 2 3 1 16 32 1 0 3 31 5 2 0 55 0 3 0 34 1 0 0][10 3 2 1 19 1 0 1 33 0 0 0 1 0 6 11 0 0 1 16 2 3 2 4 4 0 21 3 0 0][1183 6 6 9 29 1 5 0 3 0 2 16 9 11 54 4 0 9 25 6 10 2 7 0 1 2 100 11 2 0][2232 4 1 2 459 0 0 4 5100 0 1 7 2 3 617 2 0 1 0 2 98 1 1 0 7 1530 25 8 8 0][15 4 29 5 7 4 6 1 43 2 1 7 10 4 5 8 1 4 16 16 3 3 1 1 0 3 124 0 0 0][2 2 3 1 1 1 2 0 3 0 0 0 3 6 1 5 0 2 8 3 1 1 0 0 0 0 1 0 0 0][818 3 2 3 363 4 1 37 541 1 0 3 5 3 264 2 1 1 17 2 197 1 0 0 0 0 59 2 21 0][1 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]B/h2s[[5 179 144 209 17 97 151 11 66 4 5 990 205 966 18 162 27 404 246 259 133 136 1 3 5 64 48 9 0 0][468 11 15 1 406 0 0 3 210 3 0 46 7 3 297 6 0 200 3 1 135 0 0 0 4 0 6 2 0 0][1100 2 59 38 323 1 15 560 474 0 3 80 3 15 1879 5 1 186 6 4 94 1 0 0 2 0 10 0 64 0][450 1 1 8 471 1 1 2 724 7 0 4 1 7 428 6 0 60 23 0 226 5 1 0 2 0 12 1 27 0][22 18 145 141 6 18 43 2 24 0 3 234 87 274 14 57 6 372 260 83 119 38 4 21 2 19 26 9 151 0][300 2 2 0 258 8 1 0 481 0 0 39 4 1 272 3 0 222 3 3 109 0 0 0 0 0 5 0 0 0][220 5 1 4 215 1 25 21 530 0 0 359 6 26 160 17 0 252 1 3 127 0 2 0 0 0 21 0 0 0][303 0 0 1 63 0 1 0 52 0 0 3 1 1 125 3 1 1 1 2 18 1 1 0 1 1 2 0 0 0][197 31 100 47 104 21 40 1 17 0 1 2690 156 1510 281 31 0 71 167 299 22 43 0 6 0 34 32 5 0 0][38 1 0 0 24 0 0 0 6 0 0 0 0 0 43 4 0 1 1 0 143 0 0 0 0 0 0 0 0 1][62 0 0 0 22 0 1 7 26 1 0 7 1 5 28 0 0 12 0 0 10 0 0 0 5 0 3 0 0 0][2877 8 10 15 1158 7 3 13 474 2 1 147 6 0 968 4 0 1 7 19 239 9 0 0 2 1 10 1 524 0][2002 16 17 4 388 0 2 1 552 0 1 9 28 1 539 31 0 3 5 3 123 0 3 1 9 0 12 0 0 0][415 7 59 55 732 15 21 4 263 0 1 1 1 31 1476 3 2 1 23 121 216 9 0 1 3 51 9 1 0 0][4 47 73 20 3 23 192 2 7 0 12 201 136 244 3 90 0 455 108 89 6 71 2 3 0 7 25 20 2 0][866 0 4 102 903 1 4 16 419 0 1 21 10 2 700 35 0 812 17 1 120 0 0 0 2 0 13 0 0 0][4 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 2 0 0 0 859 0 0 0 0 0 1 0 0 0][394 21 47 28 526 2 11 2 651 1 3 9 21 30 576 4 0 39 21 55 96 18 1 1 3 7 8 0 0 0][654 15 335 8 726 29 13 41 857 0 21 16 18 9 690 283 22 1 59 582 398 46 3 0 8 1 28 1 3 0][326 1 3 0 474 3 11 25 239 0 0 3 3 0 454 4 0 489 7 89 310 25 9 0 5 1 10 0 0 0][21 16 34 64 67 16 20 0 18 1 1 78 27 1378 32 11 0 65 91 33 0 8 0 1 0 8 6 0 0 0][234 1 0 3 373 0 0 0 480 0 0 1 1 0 186 0 0 2 1 0 24 4 1 0 0 0 8 2 0 0][45 1 0 0 35 1 0 3 37 0 0 1 0 0 13 1 0 1 1 4 1 0 2 0 1 0 1 0 0 0][1 2 0 0 2 0 0 0 8 0 0 0 1 0 0 1 0 0 1 0 1 3 0 2 0 0 2 0 0 0][1150 0 0 1 3 0 0 0 1 0 0 1 0 0 22 0 0 0 0 0 5 2 0 0 0 0 2 1 0 0][94 0 0 2 41 0 0 2 97 0 0 4 0 0 35 0 0 1 0 1 15 0 0 0 0 29 3 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END italian)]E
%%EOF
