%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[94726 21430 8042 20590 107752 9944 35059 15918 45618 11952 53886 66440 35306 61029 53606 11983 35 44860 64638 85074 17373 20389 360 385 23128 46400 11668 14702 53 17652]B/h1s[5675 1077 619 689 1898 834 579 972 941 447 1362 607 2067 1007 567 832 14 605 1570 1084 319 687 153 93 49 320 0 0 0 0]B/h2a[[38 1304 419 2721 87 172 3835 397 1953 1543 7096 8717 3031 8365 33 2700 5 4111 2865 8847 349 714 13 50 58 8635 899 1298 3 21][4247 3099 13 58 5849 16 2 15 1226 49 90 273 19 45 854 8 0 354 177 25 363 16 2 0 12 4 99 118 0 246][245 34 86 18 429 6 3 387 1312 1 145 35 22 12 261 5 2 61 3778 37 69 24 0 1 7 65 20 22 0 7][1778 104 6 261 3905 34 22 202 1856 500 124 54 201 432 1987 35 0 315 465 816 517 338 6 0 33 86 90 127 3 538][191 871 434 2439 77 429 9831 1264 1026 888 7728 16964 6436 12677 114 733 2 9678 6723 13093 384 1122 33 152 38 5777 745 908 3 23][432 4 8 1 3226 57 9 3 1059 33 8 77 6 8 2522 3 0 231 6 144 176 3 0 0 5 0 6 8 0 514][2709 428 36 105 2659 325 462 351 1307 401 302 395 134 418 1773 73 0 669 505 466 374 327 2 0 12000 203 289 350 1 337][4732 6 3 7 3100 14 1 88 862 1 3 22 19 107 4073 5 0 27 14 28 210 5 5 0 18 3 8 7 0 80][1543 404 419 1279 444 225 2049 197 105 107 3881 2368 510 5785 223 264 5 1011 5881 2383 370 806 7 32 1 1455 750 884 1 41][2081 38 27 436 2280 19 3 14 27 64 41 289 8 171 667 17 0 94 96 582 613 19 0 0 0 55 15 38 0 496][4132 798 157 15 6478 80 18 184 3636 52 1384 346 158 572 4865 45 0 869 474 789 901 152 2 0 26 14 1565 2154 1 4669][5973 212 253 1041 10144 284 849 720 2413 994 1601 4569 1787 1239 1492 68 0 161 928 5100 453 905 3 1 4091 122 994 1167 2 822][3918 1098 77 42 7603 57 12 52 4792 62 62 353 400 98 2155 352 0 157 161 205 980 33 7 1 13 319 213 459 0 136][4812 494 897 3585 6747 289 1050 185 3447 104 2761 445 68 1809 932 47 1 80 577 5835 403 145 2 1 6457 406 1044 1201 2 726][37 1378 331 1295 25 138 4298 182 32 76 5115 6838 2390 7055 79 381 1 7233 4953 4655 73 1534 45 35 15 5121 14 16 1 5][1273 40 319 17 1752 24 6 90 616 303 79 342 19 73 1860 325 0 817 189 277 255 193 1 2 6 162 34 45 0 314][1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 23 0 0 0 0 0 0 0 0 0][4221 458 433 1232 6579 185 599 410 2619 402 653 444 1515 821 3013 83 1 864 1608 4516 521 993 6 3 46 547 175 240 1 1353][3585 467 118 73 4500 85 202 247 1864 10 676 187 494 344 3000 295 2 463 2534 2719 431 145 9 1 37 18278 524 873 1 653][7922 618 107 15 10809 124 45 889 2901 916 814 835 305 809 4498 47 0 967 1197 7457 1498 812 11 1 191 18 2534 2941 3 2322][35 128 65 904 45 27 1193 125 31 35 1768 5045 578 2195 6 143 0 800 1421 2125 4 76 1 21 4 294 12 8 0 0][4091 106 6 8 5444 25 9 19 2054 52 23 14 12 35 1509 3 0 53 40 126 48 71 1 0 3 1 37 27 0 249][64 2 4 1 68 1 0 10 66 0 1 2 2 6 29 1 0 3 18 4 2 0 15 0 2 0 9 3 0 1][10 4 3 0 23 3 1 1 89 1 4 1 1 4 8 28 0 2 2 24 27 12 0 11 2 0 18 6 0 0][2588 358 22 21 4095 107 34 203 1423 71 177 114 179 229 1574 39 0 245 583 525 320 308 6 0 1 411 74 204 2 422][3275 284 12 694 8277 55 259 266 1863 14 382 467 308 979 2723 180 0 153 887 4503 311 275 1 0 21 770 226 354 1 1892][4 1 5 2 4 2 2 27 3 1 1 2 3 3 4 1 0 2 5 3 1 2 0 0 0 1 119 26 1 0][14 2 2 6 3 1 1 18 1 0 2 1 11 3 1 1 0 1 4 2 1 3 0 0 0 0 2 1 0 0][1 1 1 1 1 0 1 1 1 0 1 0 2 1 1 0 0 1 8 1 0 0 0 0 0 0 1 2 4 0][6 0 0 0 2 0 0 0 121 0 0 0 0 0 11242 0 0 0 0 0 6281 0 0 0 0 0 0 0 0 0]]B/h2s[[2 30 16 46 5 15 14 27 15 8 87 145 142 150 2 37 2 82 29 62 46 10 2 4 1 1320 7 4 0 1][197 7 8 1 169 1 1 2 98 1 10 26 12 2 100 4 0 66 4 4 135 1 1 0 1 1 3 2 0 14][63 3 2 15 24 2 1 58 35 0 2 22 1 3 66 2 0 18 186 3 8 1 0 1 2 6 5 4 0 1][56 2 2 3 204 13 1 3 47 4 4 2 3 10 54 15 0 35 38 1 50 8 1 0 1 6 4 2 0 8][8 57 12 36 2 7 328 26 6 1 37 202 61 122 2 13 1 106 59 23 173 10 0 15 1 499 5 2 0 4][55 2 7 1 204 1 1 2 110 1 5 16 3 2 97 2 0 55 2 71 15 2 0 0 0 0 2 1 0 39][73 6 1 13 51 1 0 6 24 1 2 7 5 2 50 8 0 39 5 3 18 2 1 0 151 0 3 1 0 18][385 3 2 5 74 13 1 1 83 1 1 4 4 0 172 4 0 3 4 5 40 3 1 0 3 2 4 1 0 5][12 15 8 39 3 13 59 1 77 1 8 61 35 122 5 16 2 33 160 55 1 24 1 8 0 18 73 2 1 0][68 1 0 0 78 0 0 0 5 0 0 0 0 1 63 2 0 0 1 0 34 0 0 0 0 0 4 0 0 11][147 8 2 6 132 35 4 6 192 1 5 25 4 3 168 3 0 51 7 5 50 13 0 0 1 0 4 2 0 228][101 2 4 3 165 1 2 1 57 1 1 2 6 1 52 1 0 1 5 6 28 1 0 0 5 0 3 1 0 4][481 5 12 30 319 11 3 4 497 0 11 7 3 7 167 12 0 6 43 41 45 7 6 0 4 0 6 1 0 6][207 14 4 4 365 4 5 3 45 0 4 2 2 3 69 7 0 1 18 6 5 3 0 0 78 1 3 1 0 4][1 16 6 8 5 5 2 3 1 0 25 68 14 89 2 18 0 135 52 52 3 7 1 2 0 4 2 1 1 0][115 1 9 5 121 1 1 17 43 1 1 19 3 1 80 2 0 61 11 5 19 4 0 1 1 0 5 3 0 4][0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0][51 1 3 5 136 6 2 2 38 0 2 1 18 2 100 2 0 1 6 33 20 2 0 0 2 0 3 1 0 13][113 4 44 6 74 1 1 20 51 0 13 9 12 3 106 48 1 3 5 73 25 11 4 1 8 770 4 2 0 6][175 3 6 3 203 1 1 34 109 0 5 6 4 1 108 17 0 35 7 7 62 20 6 1 3 1 5 1 0 88][1 2 1 8 3 5 71 1 1 1 9 8 3 58 0 4 0 27 20 24 0 4 0 4 0 7 1 1 0 0][167 2 1 6 73 0 5 4 158 1 1 4 5 1 39 1 0 2 6 2 2 1 1 0 0 0 16 2 0 10][32 1 3 0 24 1 0 8 43 0 0 0 1 0 13 1 0 2 2 1 2 0 1 0 0 0 1 2 0 1][2 1 1 0 2 0 0 0 22 0 0 1 1 2 0 2 0 0 0 1 0 12 0 11 1 0 13 2 0 0][6 1 0 0 4 0 0 0 1 0 1 0 0 0 20 0 0 0 0 0 2 1 0 0 0 0 0 0 0 1][25 1 0 16 22 1 0 1 10 1 3 0 3 0 35 29 0 16 46 6 5 1 1 0 1 0 2 1 0 7][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END hungarian)]E
%%EOF
