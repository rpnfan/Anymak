%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[68645 16540 14700 53100 179074 8494 31314 25427 69563 15645 25114 36503 21709 85794 59162 16575 136 63151 42461 66799 20558 24030 15760 687 1103 10875 25519 754 354 454]B/h1s[1626 1724 870 8431 2887 483 1062 4654 2136 700 1046 901 1780 1371 1714 957 35 850 1573 1165 696 1791 2074 51 48 1351 0 0 0 0]B/h2a[[12886 413 2067 1606 61 1228 2637 59 591 64 2172 5291 2294 15654 38 1073 17 7328 2584 7013 707 415 35 110 75 119 353 33 56 26][1481 451 18 14 6646 4 4 10 2264 21 6 1054 17 7 1696 10 2 1342 264 78 629 10 10 1 48 3 50 1 1 3][777 8 181 40 1014 3 4 7424 705 2 189 253 20 8 1625 8 6 280 14 1472 396 9 4 1 43 4 41 1 3 0][4707 109 25 535 25730 26 149 147 4462 109 109 78 84 21 2207 89 0 1283 1153 1720 1202 239 175 1 48 74 2867 41 15 1][704 2105 2232 4002 17397 2124 2978 678 3569 26 3640 11943 2801 35517 249 1263 27 26090 5337 13820 2281 2639 931 388 70 1864 2115 88 11 119][366 65 13 338 876 396 220 83 728 25 42 217 29 16 909 27 0 307 375 1562 148 43 63 1 20 27 312 7 1 1][1555 116 20 585 13787 16 259 216 1384 20 43 167 82 116 969 44 0 1998 819 839 178 74 47 0 22 38 1909 54 3 2][2293 13 6 8 11892 2 4 5 2899 3 4 18 17 115 2576 8 0 424 14 3224 956 7 7 0 65 13 109 12 1 4][805 145 1782 2512 11579 242 3295 15 21 11836 2467 1903 847 14110 676 342 16 494 8892 5823 101 483 17 36 3 199 140 6 6 223][738 64 4 1150 2399 532 318 33 106 1 2959 77 25 2421 352 69 0 5 460 67 302 332 59 0 0 271 167 2 1 3][1805 216 17 33 5533 15 73 220 1106 135 941 969 74 161 1938 71 0 714 666 1858 638 52 376 2 18 54 1182 31 3 2][4294 175 63 2111 7276 430 799 77 6896 60 522 2297 233 81 1936 248 0 52 858 1143 899 167 94 1 88 46 998 27 5 3][4056 380 27 243 7069 38 118 68 2038 3 33 51 702 19 1991 658 0 35 540 516 444 56 26 2 28 27 522 21 2 4][3347 439 593 8364 3837 371 7103 307 4394 58 1272 567 310 1243 1992 159 12 146 3309 5076 795 478 345 6 38 475 6053 86 7 1][130 404 985 1066 5553 932 1870 62 495 129 1871 2422 3038 6991 9610 4665 2 10427 988 2046 1934 1710 162 45 37 104 260 11 135 30][1786 69 28 99 2841 13 297 93 621 76 57 1389 61 82 1124 540 0 2304 316 556 460 122 19 1 17 47 384 9 3 0][3 0 0 0 1 0 0 0 2 0 0 2 1 0 0 0 0 0 1 0 108 0 1 0 0 0 2 0 0 0][4841 925 249 6088 7318 185 1569 513 5534 44 2148 1219 1345 818 4634 450 2 453 3216 2821 1613 837 523 2 76 791 2112 45 4 7][795 329 3317 283 3089 131 172 333 1842 152 266 1159 351 322 905 1804 6 127 1562 9774 589 264 137 1 214 59 1960 51 5 1][3528 303 69 122 12837 47 470 642 6167 514 116 137 126 67 3063 132 0 2458 1941 806 1463 329 797 1 108 158 2978 54 6 2][206 346 543 899 221 60 426 7 3892 4 618 973 625 1474 21 168 2 2677 1539 858 1060 50 1828 38 16 232 94 9 4 12][6610 10 7 39 8343 2 5 3 1613 3 4 369 9 11 5620 7 0 966 13 7 176 31 6 0 3 4 45 1 2 1][3025 49 7 128 6032 6 8 14 2002 7 30 11 11 36 3040 16 0 33 179 36 29 15 113 0 3 3 170 5 1 1][55 2 36 2 68 3 0 2 105 1 1 3 6 1 9 74 0 1 6 100 5 2 1 6 7 1 37 1 0 0][37 20 55 18 39 6 11 2 5 1 7 38 63 54 41 107 0 19 202 24 8 7 7 1 1 3 67 4 8 0][851 4 2 2 3746 1 2 5 3730 1 2 3 3 3 1917 3 0 1 3 3 211 2 259 0 7 28 23 1 1 1][8 14 17 11 6 2 5 6 5 3 4 5 7 94 7 6 0 4 9 5 3 16 4 0 0 2 0 0 7 0][1 1 0 2 1 0 1 1 1 1 1 0 1 1 1 1 0 0 2 1 0 1 1 0 0 1 0 0 0 0][5 2 2 7 9 1 3 5 4 1 2 2 4 41 3 2 0 4 190 6 1 2 3 0 0 2 13 0 1 0][8 0 0 0 315 0 0 0 77 0 0 0 0 0 34 0 0 0 0 0 19 0 0 0 0 0 0 0 0 0]]B/h2s[[169 25 75 48 11 63 22 9 20 14 15 348 159 167 11 40 4 113 42 33 48 20 6 5 3 16 19 1 2 0][152 8 10 3 547 2 1 4 318 1 2 65 7 5 232 3 2 169 8 5 87 5 2 1 2 2 14 0 1 2][140 8 8 32 49 3 3 110 28 1 4 38 8 7 213 7 1 34 5 18 28 6 3 1 6 1 20 0 1 0][1783 3 5 5 4959 8 2 9 1018 5 2 3 5 5 216 3 0 73 15 4 166 11 6 1 5 1 16 1 5 1][13 7 50 30 1250 10 15 4 64 0 8 108 29 398 4 12 2 537 31 26 105 49 3 43 3 2 8 1 0 0][50 2 7 2 47 3 1 1 68 0 1 38 3 3 66 3 0 118 4 5 17 1 1 1 3 0 7 0 0 0][111 7 2 5 438 2 7 5 43 1 1 16 5 2 132 9 0 181 9 3 21 3 2 0 3 3 9 0 0 2][227 6 4 6 2828 1 1 1 956 1 1 2 2 1 457 3 0 5 5 10 85 5 1 0 12 2 5 0 0 1][9 10 25 30 102 5 8 1 6 26 666 14 19 881 9 13 2 22 178 46 1 13 3 2 0 4 7 0 0 0][146 2 1 2 310 1 1 1 29 0 2 0 2 2 110 3 0 1 13 1 56 1 1 0 0 2 3 0 0 1][168 8 4 2 101 1 2 4 158 1 3 186 2 25 180 7 0 59 3 2 45 5 21 0 4 3 9 1 0 2][202 3 4 6 250 2 2 2 169 1 2 10 4 2 88 5 0 1 5 5 52 4 1 0 7 1 11 1 2 1][621 10 15 4 450 2 4 2 271 1 6 8 4 1 197 9 0 8 14 5 54 5 5 2 7 1 11 0 0 3][263 8 7 10 378 4 14 4 230 2 7 17 7 6 160 6 0 6 14 12 103 15 6 1 3 2 16 1 1 0][5 18 18 10 19 75 5 5 7 1 12 28 54 266 431 395 0 57 28 12 37 128 5 4 1 4 13 1 2 0][183 3 15 11 111 5 6 22 59 1 5 67 4 7 106 5 0 185 26 4 28 21 1 0 3 1 13 0 1 0][2 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 19 0 0 0 0 0 1 0 0 0][112 4 9 9 203 2 4 7 82 1 5 4 7 3 209 4 0 2 10 17 68 9 2 1 3 2 10 3 0 1][124 12 170 6 87 6 6 39 118 8 13 58 31 37 125 149 2 5 12 321 71 18 12 1 20 2 20 1 1 1][71 6 8 2 253 2 2 62 140 8 3 6 9 3 238 5 0 85 17 6 54 18 64 1 9 2 12 1 1 1][1 3 3 4 2 1 3 1 125 0 2 7 7 42 0 7 0 23 12 31 2 5 67 0 0 1 7 0 0 0][319 8 5 23 452 2 3 3 122 1 3 63 7 9 500 5 0 106 9 4 21 28 4 0 0 3 16 1 2 1][717 5 2 1 658 2 1 7 496 0 8 1 3 1 104 2 0 3 5 3 2 5 6 0 2 1 7 0 0 1][2 1 1 0 2 0 0 0 4 0 0 2 2 0 0 2 0 0 3 2 0 0 0 2 1 0 3 0 0 0][6 0 0 0 4 0 0 0 1 0 0 0 1 0 18 1 0 0 1 0 3 2 0 0 0 0 1 0 0 0][58 1 1 0 496 0 1 2 362 0 0 1 1 1 288 1 0 1 1 0 50 2 54 0 1 2 5 0 0 1][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END dutch)]E
%%EOF
