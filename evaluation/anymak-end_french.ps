%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[73646 11321 48512 37290 146713 10719 10471 9527 67893 3564 1007 50916 26689 72202 55991 27562 6294 64400 80431 75995 52186 12892 503 4245 2712 1745 30046 4220 10095 214]B/h1s[6469 2554 16447 6052 2834 553 499 353 643 317 209 911 983 515 459 907 80 763 1032 603 318 336 171 76 206 58 0 0 0 0]B/h2a[[30 1639 2918 1107 54 405 2358 244 7523 183 105 5284 1802 10808 134 1969 446 6920 3170 6793 6062 2345 32 97 361 116 301 66 1 66][1378 36 8 37 1279 2 1 8 1503 105 1 2273 9 5 1686 9 0 1524 178 55 704 10 1 1 44 1 53 3 0 2][3569 3 724 23 11889 14 9 5120 3296 1 181 1360 17 15 8893 11 71 1375 104 2832 1707 5 1 1 108 3 202 72 4233 1][3040 9 11 39 16412 15 45 54 3847 47 1 16 102 11 2073 9 2 962 229 6 2861 30 14 0 82 3 285 89 2151 6][1314 128 2993 352 102 633 227 38 864 54 47 6054 4939 16895 57 1141 44 9532 28506 6164 5742 760 66 1295 118 1203 9340 859 1 5][1801 2 6 2 896 1360 10 1 1966 1 1 280 7 3 1757 13 0 1024 156 22 278 0 0 2 11 0 168 100 0 1][1278 16 3 10 2920 3 37 56 990 0 4 338 77 918 467 7 0 1444 39 55 744 1 2 0 24 1 109 16 0 4][2303 3 2 4 2125 2 1 5 1092 0 4 38 50 186 1372 5 0 227 18 38 599 2 6 0 130 1 113 24 1 4][1410 918 3087 1374 6506 1351 1133 10 39 21 67 4257 2067 7709 7220 692 2474 3754 8112 7838 49 1750 6 417 7 86 591 309 1 2][332 1 1 3 1053 1 0 0 22 0 0 1 1 2 1403 2 0 1 2 0 476 0 0 0 1 0 8 0 48 2][125 5 2 1 141 1 3 30 154 1 7 28 20 6 111 3 0 21 37 8 18 2 3 1 17 1 56 12 2 2][8593 97 114 90 17881 38 109 45 4958 2 22 5733 188 14 2448 64 88 6 544 651 1797 44 3 2 248 6 844 91 2334 6][4480 1203 17 9 8448 3 4 3 2518 2 2 13 2221 70 2360 2311 1 7 95 28 689 1 7 1 56 1 160 15 82 5][2782 21 4055 3477 8381 752 1212 61 2956 102 45 40 26 2834 2784 11 320 124 7012 15789 923 637 5 3 81 48 2138 293 676 3][58 756 1389 773 143 407 870 47 3539 172 77 2063 4213 18616 379 1311 175 4884 2155 1662 10071 291 66 85 356 34 215 38 4 46][5264 5 11 11 3291 6 7 802 952 0 2 2508 6 13 4933 1221 1 4805 360 866 756 1 1 1 22 1 104 19 2 3][6 0 0 0 0 0 0 0 2 0 0 1 1 0 1 0 0 0 1 1 6179 0 0 0 0 0 7 1 0 0][6692 226 1122 1475 14267 209 653 26 5802 6 103 285 1411 1235 4738 229 188 1285 3578 3762 772 517 9 2 146 12 1605 174 1 11][2668 33 878 10 6846 85 16 126 4601 6 67 65 249 26 4638 1252 287 28 4256 12528 2974 11 14 0 318 5 7544 874 342 3][4878 71 142 6 11818 9 4 699 10751 2 3 33 30 17 2969 21 0 6314 2206 2985 1829 6 12 1 159 26 2324 422 10 7][731 581 1395 645 5956 201 263 40 3292 592 22 1849 752 7377 225 1067 16 10223 4056 3728 4 1418 4 2272 45 43 424 50 185 9][1782 2 1 9 4595 1 2 1 2699 0 1 5 1 3 1935 2 0 980 5 2 190 0 0 1 6 0 38 3 0 0][108 3 2 0 98 1 0 6 91 0 2 4 1 18 34 2 0 3 27 2 2 0 20 0 3 0 21 2 0 1][123 1 158 0 296 2 0 8 366 0 0 1 3 0 20 343 1 0 2 237 19 14 0 8 14 0 506 44 0 0][342 13 116 33 262 3 23 1 5 1 3 75 132 128 97 166 1 61 481 51 7 13 7 1 1 4 115 33 1 0][105 3 1 2 93 1 0 3 64 0 2 3 2 3 88 1 0 1 2 3 19 1 1 0 23 33 50 11 0 0][5 4 26 3 4 13 2 2 2 1 0 4 3 4 5 3 0 2 4 4 1 1 0 0 0 1 250 1 0 0][1 1 2 0 2 1 1 0 1 1 0 1 1 0 1 1 0 0 1 1 0 1 0 0 0 0 1 0 0 0][2004 2 1 2 5042 1 1 546 600 0 0 1 2 2 467 1 0 2 8 6 407 0 0 0 25 0 1 0 3 1][7 0 0 0 37 0 0 0 136 0 0 0 2 1 11 0 0 2 3 0 14 0 0 0 0 0 0 0 0 0]]B/h2s[[12 111 342 154 9 95 98 24 232 54 13 706 196 524 14 446 9 429 233 223 1230 460 3 9 13 12 38 5 0 5][360 5 5 2 503 2 1 5 357 3 0 84 5 3 567 8 0 427 6 3 117 1 0 1 5 0 11 0 0 2][1019 2 11 14 6684 12 6 1088 202 1 5 377 6 12 2162 10 2 239 9 11 84 4 1 1 32 1 28 3 3994 0][776 2 7 6 2358 10 3 6 626 20 1 4 4 5 495 6 1 89 29 2 310 9 2 0 16 1 23 1 397 1][46 11 141 91 7 62 38 6 13 2 3 1775 33 71 4 16 5 70 92 67 84 16 2 27 4 3 50 5 0 0][51 1 5 1 41 7 1 0 41 0 0 31 4 3 59 12 0 211 2 3 10 0 0 1 1 0 19 2 0 1][77 3 2 3 77 1 4 6 43 0 0 9 3 6 54 6 0 85 3 1 51 1 0 0 2 0 12 2 0 1][93 1 1 2 60 1 0 0 36 0 0 4 2 0 59 3 0 4 2 4 33 1 0 0 7 1 9 0 0 1][16 10 27 11 46 11 10 1 28 1 2 41 20 154 17 12 4 34 60 33 3 30 0 9 1 3 22 4 1 0][69 1 1 2 94 0 0 0 5 0 0 0 1 0 71 1 0 1 1 0 38 0 0 0 0 0 7 0 4 1][43 0 1 0 26 0 1 6 22 0 1 16 2 5 36 1 0 11 1 0 8 1 0 0 2 0 6 1 0 2][212 2 5 2 230 2 3 3 105 1 1 24 14 2 107 2 0 1 3 6 49 1 0 0 23 0 26 2 34 2][352 8 13 6 97 1 1 1 130 1 1 7 7 2 179 15 0 3 9 3 38 1 3 0 6 0 24 1 2 1][80 3 14 11 73 3 11 1 59 1 1 2 0 10 96 8 1 6 12 22 13 3 1 0 2 1 21 8 2 0][3 24 21 9 3 10 7 3 14 0 7 34 28 57 4 15 1 68 21 19 54 5 3 3 3 2 15 1 3 0][258 1 6 6 79 3 3 47 83 0 0 37 4 4 95 4 1 114 19 8 21 1 0 0 7 0 30 2 0 0][4 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 64 0 0 0 0 0 3 0 0 0][97 4 10 16 140 6 5 10 69 1 2 7 10 5 167 6 1 7 11 19 29 3 2 1 9 0 19 2 0 1][204 2 54 4 82 5 5 27 57 1 13 10 13 6 78 34 6 3 25 111 75 3 4 0 27 2 47 5 1 1][62 2 7 2 79 4 1 54 45 0 1 4 5 2 101 4 0 74 9 8 31 3 3 0 4 1 24 6 0 0][6 4 7 10 15 5 4 1 10 0 2 13 9 114 0 7 1 37 24 14 1 2 0 5 1 1 10 1 0 0][61 1 1 8 54 1 1 1 107 0 0 2 1 1 41 1 0 2 2 1 3 0 0 0 1 0 23 0 0 0][50 1 0 0 30 0 0 5 53 0 0 1 0 0 16 1 0 1 1 0 1 0 0 0 1 0 2 0 0 1][5 1 1 0 9 0 0 0 15 0 0 0 2 0 0 2 0 0 0 1 0 14 0 4 0 0 6 1 0 0][141 1 1 1 5 0 1 0 1 0 0 1 0 1 23 2 0 2 1 1 2 7 0 0 0 0 4 1 0 0][11 0 0 1 9 1 0 1 8 0 0 0 0 0 5 0 0 0 0 0 6 0 0 0 2 1 1 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END french)]E
%%EOF
