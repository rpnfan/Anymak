%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.3 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[147756 851 785 8864 77628 878 1656 17113 97882 19110 49712 53233 29956 77038 58297 16694 33 23108 73175 94564 48232 22930 392 132 17962 89 11727 6847 60 43298]B/h1s[1345 264 327 252 1086 235 151 1198 717 925 2539 1262 1551 831 984 1376 15 744 2291 2207 427 1170 171 26 440 15 0 0 0 0]B/h2a[[11280 101 72 545 506 61 103 2628 11299 2185 4966 10718 4330 17237 230 1720 2 6273 7730 8522 2798 3931 9 19 1633 14 4736 2749 8 4906][105 10 3 2 128 1 1 2 130 17 4 28 6 6 106 3 1 65 20 5 84 2 2 0 11 0 6 8 0 21][101 1 11 21 65 1 2 108 47 1 56 14 21 3 102 3 2 32 13 30 32 2 1 1 4 2 5 6 1 0][845 7 5 9 4270 15 3 10 1000 21 1 7 9 12 1276 3 1 41 25 10 444 7 5 0 208 0 9 8 1 455][801 32 50 1067 5556 32 95 1763 5292 278 2382 8679 2116 19975 341 267 2 5034 6487 8168 1565 1243 21 36 489 4 542 382 3 256][64 2 5 1 107 26 1 1 275 3 5 35 6 1 124 2 0 54 8 23 29 2 0 0 40 0 10 1 0 1][183 6 1 2 301 2 10 16 594 0 3 64 11 39 117 5 0 112 15 4 34 1 2 0 8 0 10 8 1 5][2527 1 3 1654 2582 2 1 2 1591 741 322 94 552 54 1053 6 0 52 8 3100 870 138 2 0 756 2 46 6 0 851][3777 50 114 2088 3974 51 78 1611 5583 1078 5373 6083 4119 15523 1724 667 2 1922 17922 11678 196 2322 2 15 63 13 737 510 2 1088][9391 0 0 1 2212 0 0 2 394 1 3 2 1 23 4109 2 0 2 1 2 768 0 0 0 105 0 36 1 0 2012][9302 5 1 1 6115 2 15 18 6307 12 3307 169 34 174 6720 24 0 278 6350 373 5878 25 5 0 977 1 48 15 1 3276][8113 23 5 33 5798 19 17 30 8915 519 1378 10617 2120 6 2567 300 0 5 207 2287 4684 878 1 1 782 5 30 12 1 3647][7060 43 10 4 3685 3 9 6 7260 1 102 23 2190 8 988 978 1 7 47 14 3177 4 4 1 1252 0 310 19 0 2490][4527 8 34 239 5748 87 665 509 3355 238 2298 223 193 4904 2334 306 3 88 2157 5729 1496 359 2 1 707 3 2168 1474 7 1912][937 79 48 967 260 130 215 2002 8838 1567 3186 5359 2666 9394 1016 2393 1 2333 5904 4218 1647 1343 44 9 431 2 207 220 1 294][3680 1 12 16 2194 2 1 21 3046 3 19 82 10 9 1401 995 0 476 254 71 1995 7 1 0 426 0 17 3 0 1841][0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 18 5 1 0 0 0 1 0 0 0][3727 27 23 104 1375 11 186 367 4903 1629 2121 56 420 176 1650 166 0 505 560 1224 1123 1324 2 1 431 2 20 11 1 765][8304 21 56 17 11436 20 5 225 12037 123 2646 333 335 66 1800 426 3 122 6214 15810 3971 564 6 0 1220 2 336 205 2 3462][19509 4 13 4 11836 6 8 75 8474 34 1540 42 50 14 7255 30 0 373 1138 12057 9024 37 10 1 4340 6 501 436 3 10337][888 39 12 1237 775 11 17 886 1845 522 4216 3590 1165 4868 5088 688 0 2117 6167 5770 5186 1252 0 10 25 5 127 107 0 1][9220 1 2 2 2133 0 2 1 4087 2 7 8 3 2 2195 4 0 8 9 14 1933 5 0 0 205 0 45 6 0 2931][49 1 6 1 42 1 1 6 60 0 1 3 1 6 19 1 0 1 25 4 2 0 86 0 1 0 24 1 0 2][4 0 2 1 8 0 0 1 18 0 0 1 1 0 3 6 0 0 1 7 2 0 0 4 1 0 4 1 0 0][38 8 5 514 93 3 6 1651 579 101 1460 1120 922 899 27 139 0 494 1719 2635 3 912 2 0 1098 0 79 56 0 2512][12 1 0 1 11 1 0 5 12 0 1 1 0 1 8 1 0 0 2 2 2 0 0 0 1 11 2 1 0 1][8 2 10 2 5 43 1 12 2 4 11 8 8 8 6 9 0 2 11 10 5 5 1 0 8 0 97 19 2 0][0 0 0 0 1 0 0 0 0 2 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0][2 1 0 0 2 0 0 0 2 2 1 1 2 3 1 2 0 0 7 5 1 2 0 0 0 0 4 1 1 0][37303 0 0 0 0 0 0 0 0 0 0 0 0 0 5989 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0]]B/h2s[[47 23 16 27 2 13 11 38 94 32 41 194 59 136 3 29 1 106 144 40 57 38 0 3 7 1 10 7 0 16][28 3 3 1 39 1 1 1 22 2 4 9 3 4 30 1 1 29 3 3 20 0 1 0 1 0 2 4 0 3][57 1 5 17 17 0 1 31 17 1 3 10 2 2 51 2 0 8 4 5 12 2 0 1 3 0 3 3 1 0][29 2 5 1 32 8 0 4 37 0 1 4 3 8 28 2 0 9 6 1 9 2 0 0 3 0 1 1 0 2][10 2 11 50 25 5 3 37 60 1 25 102 28 162 4 14 1 118 129 79 135 14 1 11 3 0 3 1 0 0][15 1 5 1 19 3 0 1 64 1 2 13 5 0 31 1 0 20 6 3 9 0 0 0 4 0 2 0 0 1][21 4 1 0 17 1 0 1 6 0 1 8 3 0 18 5 0 30 5 1 11 0 1 0 0 0 2 0 0 2][305 1 2 4 338 2 1 1 83 4 5 6 5 1 79 4 0 1 4 19 74 1 0 0 71 2 2 1 0 154][10 5 13 12 6 9 6 26 50 2 18 84 28 137 9 7 1 19 84 73 1 15 0 2 0 1 6 3 1 2][170 0 0 1 48 0 0 2 5 0 2 1 0 0 351 1 0 2 1 2 188 0 0 0 40 0 8 0 0 90][604 1 0 0 242 1 2 9 269 7 23 35 2 7 456 5 0 53 11 14 483 7 0 0 94 0 7 4 0 104][316 1 3 3 135 1 0 1 310 2 5 7 5 1 93 7 0 1 6 10 135 6 0 0 18 0 4 2 0 102][407 6 10 3 176 1 2 2 318 1 9 10 15 2 102 7 0 3 8 10 212 2 3 1 106 0 6 2 0 57][79 1 2 6 111 2 2 3 128 2 6 6 6 10 94 1 1 0 8 15 57 1 1 0 80 0 1 3 0 148][7 3 3 6 2 6 1 60 36 11 17 119 38 109 8 151 0 28 85 40 55 9 1 1 123 1 2 2 0 1][282 0 10 9 200 1 0 8 162 0 12 17 5 2 190 4 0 87 25 3 117 3 1 0 50 0 6 1 0 127][0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 7 0 1 0 0 0 0 0 0 0][263 0 4 3 88 0 2 3 98 2 7 4 2 6 67 3 0 3 8 9 90 2 1 0 26 0 3 2 0 12][370 10 28 10 373 5 3 26 338 2 28 14 30 6 142 28 2 6 12 95 514 14 3 0 62 0 5 4 0 59][390 1 6 1 223 2 0 23 209 2 23 9 15 1 277 6 0 28 15 30 338 13 2 1 119 0 5 2 0 377][2 0 1 1 1 2 1 4 7 1 14 40 6 33 7 13 0 31 68 15 99 1 0 0 0 1 2 1 0 0][463 1 1 2 150 0 2 0 214 2 3 6 2 2 75 2 0 2 4 12 122 3 0 0 3 0 4 1 0 55][24 0 2 1 19 1 0 5 45 0 0 1 0 0 9 1 0 0 3 3 2 0 23 0 1 0 2 0 0 2][0 0 0 1 2 0 0 0 2 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0][4 0 0 3 3 1 0 123 2 0 61 92 26 4 10 1 0 42 9 9 0 4 0 0 4 0 2 2 0 5][2 0 0 0 2 0 0 0 3 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[](QKOUYVDLFCJHAEI,GTNSR¨Z'.XBPWM)[]A
%%Page: 2 2
(KQOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[](WFMPV¨.QX'ZRSNTB,AEIHJCLDGKUOY)[]A
%%Page: 3 3
(WFMPV¨.QX'ZRSNTB,AEIHJCLDGKUOY)[]E
%%EOF
