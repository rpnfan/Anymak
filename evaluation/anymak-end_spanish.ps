%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[116526 11508 48650 51618 129030 8208 11089 6316 67725 3851 652 53315 28104 70224 83632 27559 6903 66173 76626 47691 37205 10028 609 1968 8643 3624 10939 10367 86 1131]B/h1s[2605 802 2812 1407 3742 736 691 633 1337 399 154 2170 1591 1099 748 2179 181 1058 2403 1270 797 633 184 149 259 82 0 0 0 0]B/h2a[[24 2746 7043 9380 184 361 1022 198 342 1048 47 9838 4075 9203 49 1394 299 13072 12244 2807 814 731 15 56 873 497 1811 1828 6 70][2195 16 17 12 1105 2 2 5 2021 146 1 1669 11 3 849 5 1 1936 153 123 626 19 1 1 16 1 52 32 0 13][7888 4 949 31 3811 6 3 1671 12510 1 107 1007 30 267 11901 12 3 1147 26 2783 3509 7 1 1 8 1 128 35 0 31][7433 7 9 11 24684 15 12 22 4970 17 1 12 115 12 8742 8 43 720 37 11 1386 30 12 1 14 1 323 262 5 33][1710 962 5300 3021 256 654 2097 72 215 974 18 11007 3610 21537 614 910 444 13483 21055 1956 263 1261 30 1382 137 690 736 795 3 35][840 1 6 4 1361 28 2 1 1957 0 1 254 5 2 1442 4 1 776 6 64 991 1 1 1 2 0 22 10 0 17][2175 7 4 6 1228 2 11 24 1172 1 2 289 37 208 1343 8 0 1846 19 11 1877 1 2 1 7 1 37 29 1 53][2713 2 4 5 713 2 1 2 735 1 1 7 8 16 1412 10 1 23 13 28 309 3 4 1 10 3 23 21 0 10][5208 1199 6839 5033 5736 815 1479 14 76 174 41 2370 2729 7493 6247 993 107 2086 4269 3150 208 2189 4 42 5 1441 62 74 1 271][867 1 1 1 990 0 0 0 71 1 1 0 1 1 1139 2 0 2 3 0 651 0 0 0 0 0 11 2 0 5][75 12 2 1 97 3 9 6 114 3 5 12 32 6 34 2 0 10 26 8 21 1 5 0 13 0 16 19 1 2][14542 62 201 174 6029 51 423 8 4783 1 12 2297 486 14 7215 57 211 36 138 1132 1456 256 2 1 28 24 509 429 5 46][5673 1434 12 6 5303 4 6 3 4038 1 2 15 45 106 4481 2957 0 5 44 14 1577 3 4 3 13 1 71 37 0 99][7380 10 3641 4192 4934 894 921 24 3526 117 41 85 120 108 5017 10 151 46 2172 12128 1566 652 3 2 32 358 602 618 3 32][127 1510 2235 2301 105 761 905 61 70 165 52 2794 3922 11534 150 1105 80 9761 16469 1736 107 525 59 91 483 109 1809 1967 6 5][6192 2 199 18 3942 6 5 39 1313 1 2 1574 12 8 5852 36 1 5349 107 347 1855 9 1 1 12 2 44 16 0 22][1 0 1 0 1 1 0 0 2 0 0 3 1 0 1 0 0 1 1 0 6876 0 0 0 0 0 3 1 0 0][12953 153 1129 846 12130 166 877 8 6044 57 61 446 1992 829 7401 258 231 1607 1527 2828 982 671 7 4 40 143 460 456 2 141][3784 29 1325 349 7387 246 82 107 5531 1 32 145 603 29 4437 1921 103 25 106 9203 3569 25 14 2 19 2 2609 2629 5 36][10284 24 97 12 11253 5 10 87 6628 1 2 43 47 17 8002 19 0 6373 77 70 2483 19 49 5 28 16 78 64 1 78][2250 620 1730 1073 10062 89 384 5 1855 182 11 1693 935 6761 104 593 12 2380 2246 1123 15 146 2 23 503 113 27 17 1 25][2227 1 7 15 2746 1 1 1 3106 0 0 3 1 2 1322 2 0 5 6 2 124 0 0 1 2 0 19 7 0 17][107 2 3 1 239 1 0 7 59 0 1 3 1 8 33 1 0 4 24 2 2 0 46 0 2 0 26 3 0 1][69 2 173 1 25 3 1 16 627 0 0 2 3 0 34 445 6 1 1 303 30 21 1 20 3 0 21 18 0 1][504 4 6 5 448 1 2 1 6 0 1 12 14 12 491 11 0 9 26 11 181 2 3 0 1 1 41 94 1 2][2111 2 81 1 31 0 17 4 31 0 3 4 6 4 421 2 26 1 1 5 60 0 0 0 2 20 55 80 0 8][24 3 49 5 18 5 3 2 6 1 1 17 8 4 6 8 1 5 8 5 10 4 0 0 1 0 89 33 0 0][3 1 4 2 7 1 0 1 1 1 0 3 2 1 1 5 2 1 5 3 1 1 0 0 2 0 7 1 0 0][5 1 3 1 5 1 0 2 2 0 0 2 1 2 2 2 0 1 8 2 1 1 0 0 0 0 5 5 3 0][3 0 0 0 2 0 0 0 1085 0 0 0 0 0 5 0 0 0 0 0 33 0 0 0 0 0 0 0 0 0]]B/h2s[[8 51 161 180 20 21 74 35 45 5 5 337 134 212 3 93 63 235 234 64 102 35 3 6 33 16 55 28 0 1][200 5 7 2 105 1 1 1 94 1 1 37 4 1 96 2 0 68 6 4 83 2 1 1 3 0 9 7 0 2][548 4 14 24 169 4 3 176 162 1 2 87 9 9 960 10 1 113 14 12 247 6 1 1 4 0 38 17 0 4][107 2 6 3 539 10 2 5 318 2 1 4 5 9 114 5 0 39 9 5 67 10 1 1 1 1 24 11 1 2][22 13 69 96 23 18 19 2 13 23 3 982 86 773 8 24 12 79 1069 30 88 34 2 101 2 4 28 13 0 0][96 1 5 4 116 3 1 1 109 0 0 40 3 1 91 4 1 85 4 6 98 1 0 0 0 0 12 4 0 1][107 5 3 1 113 1 1 4 35 0 0 16 6 3 85 7 0 152 4 4 90 1 0 0 1 0 7 3 0 2][195 1 2 4 83 2 1 1 63 1 0 1 2 1 159 8 1 2 4 5 53 0 1 1 3 2 5 3 0 1][35 26 52 46 25 13 47 4 69 1 2 27 60 504 28 28 4 28 82 46 4 26 0 14 1 5 23 18 0 1][67 1 1 1 55 0 0 0 9 0 0 0 1 1 96 2 0 2 1 0 142 0 0 0 0 0 7 1 0 1][32 2 1 1 16 1 3 2 22 0 0 4 9 4 15 1 0 7 1 2 8 0 2 0 3 0 2 1 0 1][1118 2 10 4 153 2 3 1 128 0 1 41 3 1 461 4 1 1 5 12 92 2 0 1 3 1 24 8 1 3][508 10 10 4 241 2 2 2 209 1 1 7 6 2 154 15 0 4 18 6 154 2 2 2 5 0 16 11 0 8][196 2 19 16 93 5 12 1 75 1 2 3 3 4 333 3 0 2 12 36 170 4 0 0 3 2 10 8 0 1][8 41 40 15 8 46 4 3 6 5 5 37 28 60 4 44 0 113 56 57 8 11 3 4 4 2 13 12 1 0][552 1 23 14 258 5 4 16 90 1 1 89 6 4 405 8 0 375 34 7 136 8 1 1 5 1 22 10 0 1][1 0 1 0 0 1 0 0 2 0 0 2 1 0 0 0 0 1 1 0 164 0 0 0 0 0 1 1 0 0][116 3 12 9 443 4 5 3 95 1 3 5 11 7 142 7 0 7 13 21 45 4 2 1 3 1 13 7 0 1][368 7 44 8 548 3 3 33 445 1 8 14 17 7 244 38 3 13 19 73 230 3 5 2 10 1 55 18 0 2][233 3 6 4 258 2 2 29 117 0 1 6 9 2 215 5 0 171 11 5 54 15 4 1 3 1 12 8 0 3][15 11 15 21 17 2 4 1 8 1 2 16 9 446 1 13 0 48 85 22 12 5 0 1 1 1 14 3 0 0][126 1 6 12 117 0 1 1 249 0 0 1 1 1 30 2 0 2 2 1 5 0 0 0 0 0 10 6 0 1][27 0 2 1 67 1 0 5 36 0 0 0 0 0 18 1 0 2 2 0 2 0 2 0 1 0 3 1 0 1][4 2 1 0 4 0 0 0 30 0 0 1 2 0 3 6 0 1 1 3 2 21 0 18 0 0 6 7 0 0][47 0 1 1 6 0 1 0 2 0 0 1 2 1 53 1 0 0 2 2 7 1 0 0 0 0 1 7 0 0][27 0 1 0 12 0 0 1 5 0 0 0 0 0 15 1 0 0 0 1 7 0 0 0 0 1 1 1 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END spanish)]E
%%EOF
