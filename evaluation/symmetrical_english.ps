%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[80717 14965 31142 38996 120030 21472 19514 49304 72084 1493 7332 39992 25234 69861 72279 20265 1113 61157 66684 88465 26383 9778 17550 1953 16916 756 0 0 0 12305 12262 0]B/h1s[2353 1563 1942 931 764 840 726 1432 2658 579 419 709 2022 798 652 1283 63 701 2385 3312 535 235 1276 15 361 42 0 0 0 0 0 0]B/h2a[[29 1662 3097 2962 112 635 1755 134 4064 108 957 7671 2038 15153 31 1415 56 9180 7060 10586 916 1674 509 163 2380 118 0 0 0 220 184 0][1379 110 28 10 4065 1 1 2 987 102 0 1539 28 28 1915 7 0 889 302 131 1991 22 4 0 1203 3 0 0 0 39 16 0][4004 12 567 13 4744 3 4 4485 1916 1 1390 1104 8 8 6108 4 74 1123 179 2875 1246 0 0 0 281 15 0 0 0 146 39 0][1562 25 32 373 5723 29 238 31 3448 29 8 327 166 252 1819 12 17 821 1074 12 1066 146 53 0 421 7 0 0 0 1135 1013 0][6023 267 3437 9554 3306 1136 848 232 1252 30 285 3929 2672 10966 509 1402 285 15549 9956 3423 201 1798 1000 1509 1422 45 0 0 0 1406 1665 0][1145 6 7 7 1703 1329 12 1 2272 1 4 501 7 1 3621 1 0 1656 63 683 726 0 1 0 53 0 0 0 0 84 86 0][1349 5 2 11 3172 13 252 1889 1025 1 6 366 47 474 1286 3 0 1420 518 111 575 0 4 0 117 1 0 0 0 354 410 0][7955 30 7 37 23079 16 3 10 6092 1 6 101 68 168 3691 6 5 617 177 1088 577 4 44 0 295 0 0 0 0 195 275 0][1878 573 5011 3766 2904 1341 2041 7 28 18 440 4351 2294 18991 5195 753 41 2585 7577 8475 87 1847 10 143 8 293 0 0 0 33 46 0][241 1 1 1 271 1 0 0 33 0 0 0 0 0 398 1 0 15 1 0 500 0 0 1 0 0 0 0 0 24 1 0][159 6 3 12 2367 21 14 47 1030 4 12 110 13 446 111 9 1 54 494 9 68 0 21 0 94 0 0 0 0 173 217 0][3948 45 68 2593 6120 418 36 10 5261 1 214 5051 167 30 2915 167 1 91 1196 796 897 246 80 0 3293 7 0 0 0 285 363 0][4395 722 47 4 6341 33 3 3 2566 0 1 32 685 63 2830 1781 1 529 741 18 825 0 5 1 358 1 0 0 0 298 273 0][2512 56 2974 9341 5420 417 8317 103 2670 72 628 499 325 713 3359 30 37 73 3428 7788 578 499 54 25 934 23 0 0 0 940 1118 0][484 559 1079 1358 238 7427 587 167 701 37 727 2597 4733 12610 1956 1673 11 9230 2225 3250 6976 1539 2719 74 380 42 0 0 0 188 220 0][2734 16 12 5 3581 9 4 832 858 1 7 1837 94 8 2549 1025 1 3267 387 600 801 1 8 0 59 0 0 0 0 209 128 0][2 1 0 0 0 0 0 0 14 0 0 0 0 0 0 0 0 0 0 1 1058 1 0 0 0 0 0 0 0 6 1 0][4964 198 919 1498 14360 184 774 94 5021 5 946 735 1296 1432 5327 379 2 927 3505 2801 1018 422 116 7 1814 4 0 0 0 1064 892 0][3228 61 1045 198 6788 94 17 2867 3872 1 443 538 429 183 2876 1353 58 80 2798 8723 2135 0 219 2 344 4 0 0 0 2503 2435 0][3807 30 259 15 8778 43 28 25552 8511 1 15 848 248 107 8489 27 0 3177 3048 1300 1608 24 653 1 1325 62 0 0 0 970 1001 0][949 557 1354 717 1048 123 1025 6 850 7 56 2608 880 3080 56 1069 3 3932 3284 3707 2 12 15 14 117 27 0 0 0 217 30 0][854 0 1 1 6191 1 1 1 1969 0 0 7 1 1 540 1 0 7 10 1 9 1 1 1 60 1 0 0 0 40 12 0][3259 10 5 37 3106 11 1 2942 2993 0 6 116 16 700 1901 7 0 179 313 42 8 0 0 0 43 0 0 0 0 105 129 0][146 1 177 1 199 9 0 21 190 0 0 3 0 0 28 585 1 0 0 277 26 1 2 4 7 0 0 0 0 13 22 0][104 43 44 37 1221 10 12 10 331 0 2 83 140 88 1065 88 0 38 891 102 34 2 19 2 1 12 0 0 0 857 1011 0][105 4 1 0 326 0 1 7 85 0 4 15 3 2 53 1 0 1 2 4 10 1 6 0 15 26 0 0 0 8 16 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][5 2 13 1 2 3 2 0 1 4 4 0 10 15 0 2 0 0 168 3 0 1 0 0 4 0 0 0 0 12 135 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/h2s[[10 59 56 52 7 101 32 14 77 0 7 325 195 357 4 53 7 143 216 135 86 20 4 4 10 7 0 0 0 29 5 0][208 5 23 1 174 0 1 1 66 1 0 54 13 1 146 5 0 178 15 7 563 0 1 0 55 3 0 0 0 14 2 0][425 12 8 7 67 1 1 292 83 1 1 61 1 4 712 4 0 49 6 1 50 0 0 0 1 10 0 0 0 27 9 0][126 0 6 1 293 1 0 4 105 0 1 2 8 1 149 2 0 60 19 1 88 1 2 0 5 0 0 0 0 14 1 0][108 1 47 42 3 1 7 0 12 0 1 53 43 95 3 8 13 15 18 8 110 53 1 71 2 0 0 0 0 14 1 0][64 5 2 7 104 2 1 0 121 1 1 48 5 0 208 0 0 216 2 3 31 0 1 0 0 0 0 0 0 7 1 0][74 2 2 2 192 0 0 5 31 0 0 12 12 3 185 1 0 138 0 1 44 0 1 0 0 0 0 0 0 8 0 0][207 1 1 2 712 1 1 4 129 0 1 0 3 1 259 1 0 3 4 1 81 0 2 0 7 0 0 0 0 9 0 0][7 17 15 26 1 137 1 1 18 0 0 15 23 598 9 3 0 105 91 472 2 8 0 0 1 0 0 0 0 10 14 0][180 1 0 0 62 1 0 0 15 0 0 0 0 0 141 1 0 15 1 0 136 0 0 1 0 0 0 0 0 24 0 0][54 0 1 0 50 1 2 17 77 1 1 12 7 18 64 0 0 27 1 1 50 0 4 0 4 0 0 0 0 7 4 0][173 1 4 1 131 1 0 1 110 1 1 12 1 1 177 1 0 0 2 18 37 0 1 0 14 0 0 0 0 1 3 0][480 2 45 2 160 2 3 0 246 0 0 2 0 1 316 3 0 527 33 2 105 0 4 1 37 0 0 0 0 10 1 0][157 9 18 1 207 1 4 0 59 0 1 1 0 2 269 3 0 3 4 2 14 1 2 0 2 0 0 0 0 26 1 0][9 10 42 3 3 59 2 39 4 1 8 26 6 192 1 37 0 50 10 39 22 13 12 8 1 4 0 0 0 2 13 0][263 1 7 3 176 3 1 248 52 0 0 38 0 4 162 5 1 230 6 3 31 1 1 0 6 0 0 0 0 7 1 0][1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 0 0 0 0 0 0 0 3 0 0][108 0 4 0 239 0 0 4 84 4 0 0 2 11 146 1 0 0 5 5 44 0 3 0 6 1 0 0 0 6 1 0][237 5 74 6 278 3 6 253 127 0 18 14 24 4 351 50 7 2 5 410 162 0 29 2 33 1 0 0 0 193 12 0][83 0 8 1 135 1 0 2550 48 1 0 1 2 0 150 1 0 113 7 1 99 23 31 1 7 1 0 0 0 3 5 0][8 3 3 2 2 1 3 0 1 0 16 3 3 214 0 8 0 5 51 9 0 0 0 0 0 1 0 0 0 187 2 0][35 0 1 0 41 1 0 1 91 0 0 1 1 1 20 1 0 0 2 1 1 0 1 1 4 0 0 0 0 5 4 0][231 1 1 1 402 0 1 357 159 0 0 0 0 0 78 2 0 8 2 1 2 0 0 0 10 0 0 0 0 10 1 0][1 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0][15 1 1 1 81 0 0 0 3 0 0 0 1 1 235 0 0 0 0 0 10 0 0 0 1 0 0 0 0 4 1 0][12 0 0 0 5 0 0 1 7 0 0 0 1 0 4 0 0 0 0 3 5 1 2 0 0 0 0 0 0 1 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ.,ß)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0.25 3][1.25 3][2.25 3][3.25 3][4.25 3][5.25 3][6.25 3][7.25 3][8.25 3][9.25 3][10.25 3][0.5 2][1.5 2][2.5 2][3.5 2][4.5 2][5.5 2][6.5 2][7.5 2][8.5 2][9.5 2][10.5 2][1 1][2 1][3 1][4 1][5 1][6 1][7 1][8 1][9 1][10 1][0 1][11 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 -2 2 2 3 4 5 -5 5]B/shift[33 33 33 33 33 32 32 32 32 32 32 33 33 33 33 33 32 32 32 32 32 32 33 33 33 33 33 32 32 32 32 32]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0.25 b/miniyoff -1 b/minihoehe 3 b/miniweite 11.25 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 32 b/N 34 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(KUÜ.ÄVGCLJFHIEAODTRNSßXYÖ,QBPWMZ)[(AdNW - English)](QHOUXGCRFZÜYIEAßDSTNBÄJ.ÖK,WMLPV)[(BEAKL-15 - English)]A
%%Page: 2 2
(JDUAXPHLMWßCTIEOBNRSGQFVÜÄÖYZ,.K)[(Bone - English)](WLYPBZFOUÜßCRSTGMNEIAÄQJVDKXHÖ,.)[(Canary - English)]A
%%Page: 3 3
(QWFPGJLUYßÖARSTDHNEIOÄZXCVBKM,.Ü)[(Colemak - English)](QWFPBJLUYßÖARSTGMNEIOÄZXCDVKH,.Ü)[(Colemak DH - English)]A
%%Page: 4 4
(ß,.PYFGCRLÜAOEUIDHTNSÄÖQJKXBMWVZ)[(Dvorak - English)](BYOUÄÜLDWVZCIEA,.HTSNQGXJKßÖRMFP)[(Engram - English)]A
%%Page: 5 5
(VLHGKQFOUJÜSRNTBYCAEIÄZXMDPßW.Ö,)[(Focal - English)](BLDCVJYOU,ÜNRTSGPHAEIÄXQMWZKFÖß.)[(Gallium - English)]A
%%Page: 6 6
(BLDWZÄFOUJÖNRTSGYHAEI,QXMCVKP.Üß)[(Graphite - English)](WFMPVÖ.ÜÄßZRSNTB,AEIHJCLDGQXUOYK)[(Hand Down Neu sym - English)]A
%%Page: 7 7
(K.OUÄQGCLFJHAEIYBTRNSßZX,ÜÖPDWMV)[(KOU - English)](K.O,YVGCLßZHAEIUDTRNSFXQÄÜÖBPWMJ)[(KOY - English)]A
%%Page: 8 8
(KFOUYVDCLJÜHAEI,GTRNSÄXQ.ZÖBPWMß)[(KOY 30 variant - English)](QWLDGJFOUÜßNSRTPYHEIAÄZXCVBKM,.Ö)[(Middlemak NH - English)]A
%%Page: 9 9
(XVLCWKHGFQßUIAEOSNRTDYÜÖÄPZBM,.J)[(Neo - English)](ZYUAQPBMLFJCSIEODTNRHßVXÜÄÖWG,.K)[(Noted - English)]A
%%Page: 10 10
(QKOUYVDCLJÜHAEIFGTRNSÄZ,.XßBPMWÖ)[(Pit 2.0 - English)](PUÖ,QGCLMFÜHIEAODTRNSÄKY.ßXJVWBZ)[(PUQ 30 variant - English)]A
%%Page: 11 11
(QÜOUYVDCLJZHAEIÄGTRNSFKX.,ÖBPMWß)[(QOU 1.2 - English)](QWERTYUIOPÜASDFGHJKLÖÄZXCVBNM,.ß)[(QWERTY - English)]A
%%Page: 12 12
(QWERTZUIOPÜASDFGHJKLÖÄYXCVBNM,.ß)[(QWERTZ - English)](VMLCPXFOUJÜSTRDY.NAEIÄZKQGWBHÖß,)[(Sturdy - English)]A
%%Page: 13 13
(V.OUÄQGLHFJCAEIYBTRNSßZX,ÜÖPDWMK)[(VOU - English)](X.O,YVGCLJßHAEIUDTRNSFKQÄÜÖBPWMZ)[(XOY - English)]A
%%EOF
