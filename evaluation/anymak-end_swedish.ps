%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[112677 14525 14325 41894 90361 19152 33133 21722 53508 9040 31070 51255 34332 77195 53390 18408 82 80604 57246 82494 18099 23648 641 1227 5953 272 12710 6256 73 34712]B/h1s[1629 1277 666 2702 1303 1299 827 1537 1178 1173 1120 1018 1839 1123 903 1011 35 742 2862 1244 499 1576 222 51 80 52 0 0 0 0]B/h2a[[52 551 1017 4938 56 747 6676 140 171 132 2133 7620 3679 17222 21 1084 7 23638 4623 11317 241 3827 25 283 84 42 1264 695 7 19][2127 615 6 8 3097 6 3 10 1166 247 17 1951 13 9 1253 38 0 1357 104 66 421 9 3 1 500 0 33 16 0 939][400 5 59 13 741 3 2 7753 477 1 3981 53 55 4 281 7 2 74 24 60 49 4 1 1 80 1 32 12 1 0][4453 142 16 687 17685 97 129 78 2336 257 106 604 72 497 876 57 5 1757 939 92 1518 197 8 1 119 4 485 251 3 949][362 474 748 5040 197 1120 977 581 109 275 1389 5538 1863 20158 127 368 5 18813 3460 12913 187 999 34 624 61 11 818 403 4 11][1549 13 5 6 705 546 5 4 1882 72 14 763 8 20 1208 7 0 2256 64 1457 466 22 8 1 240 1 39 20 0 6542][4246 75 5 291 5450 51 1249 465 1102 253 66 617 47 683 1356 60 1 1676 1320 1769 337 41 3 0 76 1 906 447 2 1103][4955 11 7 13 2697 6 2 8 584 294 9 48 18 28 1491 14 1 46 29 57 1100 15 12 0 153 6 39 30 1 2106][749 226 1163 2723 937 556 6303 122 52 16 2309 5968 627 12589 1538 322 6 792 3740 3456 75 1641 5 92 3 41 114 68 1 55][3670 6 2 131 809 2 2 2 28 7 32 211 5 49 801 13 0 5 49 41 1478 3 1 0 3 0 39 40 0 1364][7641 51 8 58 3475 60 61 161 855 53 57 1605 93 861 3826 45 1 1466 981 3265 1450 607 5 0 322 1 280 157 2 1355][7226 343 26 1423 5466 243 235 106 6462 951 720 10261 473 462 1276 322 2 139 1649 1925 1085 703 5 1 596 3 456 213 2 2512][4613 331 18 89 7384 236 110 230 2582 91 98 364 2561 548 1386 697 2 212 497 688 500 64 6 2 624 1 387 199 2 1210][6812 204 192 6970 3297 424 7223 267 3833 142 1106 605 117 3426 1578 101 3 136 5007 4727 1087 536 4 2 756 17 2020 899 7 1552][162 620 8243 1450 179 471 1380 126 44 547 1292 2625 8894 5147 200 1401 1 13557 1757 2347 203 1530 80 65 24 9 123 73 2 60][2072 28 15 87 2326 87 150 91 467 11 30 1151 64 171 867 2610 0 1778 373 375 274 39 3 0 36 0 136 73 0 132][2 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 43 12 1 0 0 0 1 1 0 0][9777 990 67 1689 7074 536 976 331 4787 479 1770 908 1038 2680 2637 165 2 751 2986 2665 1566 551 12 2 586 5 1806 951 3 2344][3901 355 318 202 4062 321 134 357 2932 591 6333 1343 767 787 4977 1518 8 177 2713 9764 646 1213 40 1 500 4 649 287 3 1913][8187 291 118 47 10813 317 153 295 7953 283 103 445 191 649 2450 97 3 3359 2226 11400 1082 786 18 2 937 19 1814 787 3 1732][130 289 118 714 181 128 320 18 74 4 707 1399 801 3103 12 1482 0 1639 1499 2996 13 191 1 52 2 8 60 42 0 1][5282 44 8 117 4101 40 85 22 5012 25 69 321 35 145 202 11 0 148 475 188 201 40 1 1 17 0 159 61 0 2662][106 3 3 3 183 2 1 19 111 0 1 6 2 12 51 2 0 8 15 3 2 0 21 0 1 0 14 5 0 5][140 6 9 4 198 5 1 5 101 9 15 28 3 24 29 68 0 2 5 254 12 3 1 4 5 0 47 11 0 0][276 42 986 325 46 103 632 37 9 3 180 298 204 343 49 151 0 526 554 528 7 59 4 33 2 1 47 34 1 1][52 2 0 0 39 1 1 2 31 1 2 2 1 1 34 1 0 1 2 1 6 1 1 0 5 35 5 5 0 0][28 2 5 4 30 5 4 2 1 1 19 1 20 2 7 2 0 1 47 2 1 6 1 1 0 0 0 7 0 1][1 2 0 3 1 2 1 4 1 1 2 2 6 1 3 1 0 1 6 3 0 2 0 0 0 0 3 4 0 1][2 1 0 2 1 1 1 1 1 0 1 1 1 2 1 1 0 1 24 2 0 1 0 0 0 0 2 2 7 0][21203 0 0 0 1 0 0 0 0 0 0 0 0 0 13496 0 0 0 0 0 10 0 0 0 0 0 0 0 0 0]]B/h2s[[8 59 28 40 4 23 29 11 33 6 26 262 41 307 1 33 4 200 56 135 34 104 7 12 2 4 22 10 0 0][172 11 4 2 209 3 1 2 118 28 9 116 6 3 163 2 0 145 11 5 50 3 0 1 29 0 12 6 0 44][141 4 5 9 43 2 1 114 33 0 11 31 4 2 106 4 0 26 7 5 17 4 1 0 7 0 11 5 0 0][165 3 5 4 1730 5 1 6 104 16 3 2 9 5 85 6 0 46 10 3 174 6 1 1 8 1 9 6 0 120][19 7 12 38 5 137 16 4 9 4 34 117 50 373 4 7 2 77 34 126 78 27 3 46 3 0 5 2 0 0][128 3 4 1 34 7 1 2 145 9 8 64 4 12 112 2 0 182 10 4 32 2 1 1 20 0 7 5 0 412][76 5 1 5 86 3 1 5 58 4 5 39 3 4 72 8 0 131 5 5 116 1 1 0 7 0 5 2 0 109][492 4 3 8 181 3 1 0 67 15 2 4 3 1 239 6 0 4 11 4 150 5 2 0 15 5 6 1 0 237][8 25 20 107 4 24 40 2 22 0 38 14 30 293 5 14 1 23 62 29 2 16 1 2 1 2 4 3 0 0][765 2 1 1 59 0 0 0 13 1 0 1 1 0 164 1 0 2 3 2 80 0 1 0 2 0 6 2 0 48][269 4 1 3 47 4 3 5 59 7 7 80 5 19 199 3 0 81 6 6 88 25 1 0 14 0 10 6 1 84][160 1 7 6 116 2 2 1 216 21 3 16 4 1 84 5 0 2 9 9 87 3 0 1 28 0 6 3 0 134][477 4 13 5 551 5 2 6 211 6 7 5 5 1 146 6 0 5 14 4 52 4 4 2 46 0 10 6 1 63][84 1 5 9 89 4 12 2 106 6 3 2 2 5 141 4 0 4 12 16 209 3 1 1 64 1 13 5 0 214][12 22 174 18 4 25 5 9 2 9 17 67 167 38 4 31 0 87 80 14 9 38 4 8 1 2 5 3 1 1][149 2 5 4 139 3 3 21 50 1 2 51 5 1 81 7 0 158 20 6 32 4 2 0 5 0 8 3 0 9][2 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 14 1 1 0 0 0 1 0 0 0][92 3 5 4 167 8 2 5 88 2 4 3 5 4 117 3 0 2 8 17 41 2 1 1 23 0 6 3 0 50][249 20 52 11 242 11 5 39 107 56 265 54 75 46 188 99 2 7 24 429 78 297 29 1 51 1 13 7 0 95][143 2 5 2 108 2 2 82 183 22 2 5 5 3 134 4 1 183 9 8 47 63 7 2 68 1 9 4 0 55][1 2 3 6 3 4 4 2 1 1 4 33 17 136 0 66 0 17 53 76 0 5 0 1 0 0 4 3 0 0][302 3 6 10 89 3 2 1 774 0 1 6 7 1 20 3 0 4 8 5 5 4 1 0 2 0 8 4 0 172][44 1 2 1 36 1 0 12 60 0 0 0 1 1 25 1 0 5 3 1 1 0 1 0 0 0 3 1 0 2][3 1 1 1 1 0 0 0 3 2 0 3 1 0 0 2 0 1 2 2 1 1 0 2 1 0 1 1 0 0][7 0 2 1 5 0 2 1 2 0 0 1 1 2 20 0 0 4 5 10 1 2 0 1 0 0 1 0 0 0][11 0 0 0 11 0 0 1 6 0 0 1 0 0 9 0 0 0 0 0 2 0 0 0 0 1 1 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END swedish)]E
%%EOF
