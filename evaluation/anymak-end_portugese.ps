%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[122093 10568 35456 50149 122070 10675 12710 9228 63924 4002 732 27474 47124 51797 103368 29661 11739 67773 82100 50623 40821 14173 526 2485 427 3948 10466 13727 138 21]B/h1s[3652 1061 2429 1525 2706 1345 750 510 1035 925 119 1026 2284 1692 1901 3731 426 1007 2354 1398 539 725 138 123 34 75 0 0 0 0]B/h2a[[30 1748 2871 8376 89 440 1788 62 3891 215 41 7699 5576 8214 1462 1837 712 13770 13435 3261 831 1541 21 78 60 996 1746 2552 11 1][1582 13 15 15 2006 2 1 1 896 131 1 820 25 3 1515 11 0 2066 256 62 358 31 1 1 47 0 17 11 0 0][6936 7 67 34 3663 7 8 1139 5028 2 76 815 24 103 12044 44 4 1490 16 1294 1509 6 1 1 7 3 73 29 1 0][10646 6 12 12 19849 5 14 5 4559 18 1 9 112 12 12361 11 23 419 45 6 897 53 8 1 21 1 63 42 12 1][778 695 3782 1495 183 749 1870 36 4676 582 12 4904 9760 12573 310 904 592 12799 17802 1904 2125 1603 28 1469 32 962 792 1514 8 0][2072 3 59 3 1939 32 1 1 2443 0 1 191 10 3 2095 13 0 679 8 24 595 4 0 1 1 1 28 10 1 1][2624 8 5 8 1667 4 14 24 1153 0 1 127 67 211 2264 7 0 1424 33 34 2409 3 1 0 5 1 40 43 1 1][3125 3 8 3 1463 2 1 9 473 1 1 6 7 14 2859 4 0 15 6 22 254 1 2 0 9 1 15 27 1 1][6758 512 4704 4423 728 723 1730 6 86 78 37 2652 3664 8043 4068 789 253 3956 7992 4559 299 2188 2 501 3 1320 113 181 2 0][862 1 4 2 573 1 0 0 42 6 1 1 3 3 1024 4 0 2 11 1 809 1 0 0 0 0 8 3 0 1][67 2 9 0 85 2 6 5 74 1 14 8 15 4 31 159 0 8 40 6 19 1 3 0 12 0 15 21 1 1][3767 56 124 265 3074 46 674 2817 4324 3 14 156 576 10 3055 100 183 5 127 1172 1141 489 1 2 36 4 454 574 4 1][9893 1431 13 4 7738 5 5 2 2591 2 1 11 47 16 4987 2669 0 8 28 50 1763 4 4 2 12 1 318 524 3 1][5910 8 2984 4853 2201 739 996 2800 2489 140 53 40 5 99 5990 7 183 71 3185 12215 1181 649 2 8 23 43 48 79 4 1][778 1292 1561 2129 234 470 1041 22 1694 370 233 2706 5978 6636 363 957 79 10425 16037 927 3512 1280 55 69 19 155 2003 2990 8 1][7269 4 46 11 5150 7 6 36 1067 3 1 876 14 22 7800 43 6 5212 180 231 574 4 1 1 6 1 46 35 3 0][3 1 1 3 1 0 0 0 1 0 0 1 0 0 0 0 2 2 1 1 11691 0 0 0 0 0 3 1 0 4][13355 157 936 1137 12017 114 652 5 6859 8 60 151 1509 845 6236 316 547 1405 570 3802 732 476 6 7 40 11 649 675 4 1][4676 178 1648 185 9636 186 47 96 3384 2 29 108 834 30 4000 1740 181 48 4862 9304 1947 35 15 1 11 3 2182 2889 10 1][10116 16 69 9 12847 5 6 121 6339 1 1 52 33 12 8846 20 0 4601 80 249 2943 21 190 2 30 10 46 54 2 0][3168 836 493 965 9906 71 790 5 2913 82 9 1683 5778 2421 94 514 16 2340 1526 1972 11 213 1 67 4 231 111 150 2 0][2988 1 19 6 5141 1 1 1 3143 0 0 3 4 1 1785 3 0 307 9 1 58 1 1 0 2 0 19 11 1 0][62 2 4 1 64 1 0 8 234 0 2 3 1 11 35 1 0 5 19 3 2 0 19 0 1 0 13 4 0 0][406 1 182 5 295 2 0 0 517 0 0 3 2 0 197 357 0 0 2 256 34 19 0 23 4 0 13 18 0 0][26 4 6 4 18 1 1 1 3 1 1 11 6 11 28 4 0 6 22 18 6 2 5 0 1 0 15 30 1 0][947 2 1 1 1229 0 1 3 314 0 1 2 40 0 195 1 1 1 1 0 35 0 0 0 3 14 50 92 0 0][12 5 25 3 6 2 2 0 2 1 1 3 6 2 6 16 1 3 16 2 1 2 0 0 0 0 584 13 1 0][12 3 8 8 14 3 1 1 2 2 0 2 10 7 9 11 5 2 8 5 2 3 0 0 0 0 6 2 0 0][9 2 6 2 6 1 1 1 2 0 0 2 4 3 6 3 1 3 17 3 1 1 0 0 0 2 8 8 3 0][4 0 0 0 1 0 0 0 1 0 0 0 0 0 4 0 0 0 0 0 8 0 0 0 0 0 0 0 0 4]]B/h2s[[6 127 180 121 13 43 147 17 82 10 3 356 124 326 61 190 51 151 322 180 56 62 7 3 3 16 35 27 1 0][182 4 11 6 313 1 0 1 64 8 0 61 4 1 103 9 0 159 3 5 34 2 0 0 5 0 12 8 0 0][518 5 11 32 93 4 7 125 83 1 2 105 14 6 956 41 0 104 8 12 60 3 1 0 2 1 30 15 0 0][154 2 7 3 633 3 6 2 237 6 0 3 6 8 123 9 0 44 20 3 56 5 0 0 1 0 40 13 3 0][13 9 39 68 4 19 11 4 22 2 1 118 218 285 5 13 9 66 806 107 301 23 1 86 1 2 15 43 1 0][343 2 56 2 257 2 0 1 165 0 0 31 9 3 174 11 0 137 2 2 60 4 0 0 0 0 17 5 0 0][108 5 4 5 80 3 1 4 34 0 0 15 38 10 184 6 0 114 5 7 86 3 1 0 1 0 6 5 0 1][54 1 5 3 62 2 1 0 67 0 0 0 2 0 134 3 0 2 1 2 38 0 0 0 3 1 3 2 0 0][25 15 30 26 7 6 45 2 73 1 2 23 59 303 18 16 1 40 128 29 2 23 0 10 1 4 16 23 1 0][156 1 3 2 66 1 0 0 5 5 0 1 2 2 257 3 0 2 3 0 288 0 0 0 0 0 7 3 0 1][27 0 0 0 15 0 2 2 20 0 1 4 4 2 11 0 0 6 1 1 5 0 1 0 2 0 1 2 0 0][103 7 5 10 176 6 3 4 319 0 1 5 3 1 127 5 0 1 3 3 142 2 0 2 5 0 10 6 1 0][1052 8 11 3 362 3 3 1 195 2 0 5 5 3 216 12 0 5 8 39 183 2 3 1 4 1 17 8 0 1][290 2 7 9 226 4 7 6 44 2 1 1 2 1 478 4 0 12 12 17 129 2 0 1 2 1 7 8 1 0][5 62 21 12 11 18 5 5 9 1 6 96 12 54 7 38 0 125 263 11 215 11 2 4 1 2 9 9 1 0][1059 3 28 8 313 5 4 13 272 3 0 46 11 11 1038 16 1 305 118 10 171 4 0 1 1 0 32 26 1 0][2 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 1 1 414 0 0 0 0 0 1 0 0 0][109 2 8 6 399 3 3 3 103 0 1 2 4 3 146 4 0 5 13 20 59 2 1 0 3 0 16 8 0 0][314 4 41 41 679 4 3 30 176 1 7 15 11 9 205 120 1 20 15 59 173 2 5 1 3 1 57 23 0 0][205 4 8 4 313 1 3 33 82 1 0 3 5 1 146 14 0 126 6 8 77 16 177 0 2 0 7 7 0 0][29 5 7 4 24 3 3 2 8 0 1 12 219 120 0 8 0 23 24 13 1 3 0 0 0 1 5 3 0 0][130 1 5 5 157 1 1 1 250 0 0 1 4 1 62 3 0 1 2 1 2 1 1 0 0 0 10 7 0 0][25 0 2 1 31 0 0 5 36 0 0 0 0 0 15 0 0 3 1 1 1 0 3 0 1 0 2 1 0 0][9 1 3 0 1 0 0 0 25 0 0 2 0 0 1 1 0 0 1 1 3 19 0 18 0 0 6 9 0 0][6 0 0 0 3 0 0 0 0 0 0 0 0 0 13 0 0 0 1 0 2 1 0 0 0 0 0 1 0 0][11 0 0 0 15 0 1 1 5 0 0 0 0 0 19 0 0 0 0 0 2 0 0 0 0 0 1 1 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END portugese)]E
%%EOF
