%!PS-Adobe-3.0
%%BoundingBox: 0 0 842 595
%%DocumentFonts: Courier-Bold
%%DocumentData: Clean8Bit
%%EndComments
%%BeginProlog
/transparenz true def  % Verwende Transparenz (nach Konversion in PDF)
/alpha 0.5 def         % Grad der Transparenz (1: intranspanent)
/mitmini true def      % Zeige Minitastatur unter Buchstaben
/mitZahlen true def    % Zeige Haeufigkeiten zusaetzlich als Zahlenwerte an
/mitSummen true def    % Zeige summierte Haeufigkeiten mit an
/minFuerKurve 0.01 def % Mindestbigrammhaeufigkeit, ab der Kurve gemalt wird
/maxkurvendicke 0.25 def   % Maximale Dicke der Kurven
/differenzen false def % Zeige Haeufigkeitsdiffenzen fuer Belegungspaare
/fhkaestchen 0.25 def % Fingerhaeufigkeit: Haeufigkeit, die Kaestchen fuellt
/ghkaestchen 0.4 def  % Gruppenhaeufigkeit ''
/bikaestchen 0.02 def % Bigrammhaeufigkeit ''
/zhkaestchen 0.2 def  % Zeilenspruenge     ''
/kollschritt 1.25 sqrt def % Sprungdistanz-Einteilung bei Kollisionen
/beschrx 0.3 def      % X-Position der Beschreibung
/beschry -0.7 def     % X-Position der Beschreibung
/beschrgr 0.7 def     % Groesse der Beschreibung
%
/b{def}bind def/B{bind b}bind b/h1a[75946 19331 27674 40687 90654 3774 3669 24991 48216 23762 42495 45100 37445 73341 91569 38423 74 42439 50088 62522 36522 47274 729 945 20139 22658 15145 14306 25 57]B/h1s[1806 1333 1210 1662 896 604 442 985 794 1630 1779 941 1960 2102 1327 3600 38 1143 2502 1889 630 2609 251 112 85 1093 0 0 0 0]B/h2a[[25 1372 2601 4012 43 254 346 964 223 1884 5583 6389 2448 5035 93 1394 10 2736 3000 5462 655 4028 25 161 63 1287 924 983 0 2][1576 21 284 127 1520 1 2 17 763 263 101 1047 19 718 2555 4 1 1387 267 32 1804 65 2 1 3383 14 83 55 0 2][300 7 73 22 5730 3 4 10540 2628 1 1858 97 106 282 1474 18 3 76 30 322 162 74 0 1 92 115 132 115 0 0][2651 239 303 78 4731 14 14 101 2428 32 580 1556 318 4326 6736 576 0 1427 573 56 1699 752 13 1 1992 54 198 126 2 1][345 2274 2682 5639 124 292 459 954 99 3078 2827 4885 5997 10277 286 1363 4 5447 3601 3703 339 1770 39 474 47 2038 1219 1377 2 5][392 5 8 3 403 40 3 1 955 3 13 115 7 8 900 6 0 227 12 61 234 0 1 1 63 1 21 11 0 1][450 18 2 14 458 3 14 41 635 1 2 129 39 136 356 13 0 548 15 15 237 3 2 1 81 1 53 29 1 1][1244 11 217 87 720 3 1 2 313 1 72 2293 71 941 7466 19 1 1539 13 367 1087 226 12 0 760 8 340 294 0 5][436 296 3843 1444 894 204 378 342 286 365 2042 3353 1062 5158 548 540 7 534 2503 4400 86 2139 4 45 2 804 872 923 0 0][2205 34 50 444 9460 3 2 22 2374 8 66 180 508 576 276 65 0 39 2321 277 135 222 0 0 1 28 80 53 0 2][4200 8 440 1316 994 7 28 30 179 3 36 1935 91 418 8018 9 0 1756 73 3368 3597 580 11 1 2994 19 319 396 0 5][6603 138 121 89 8816 59 26 100 6282 9 847 215 369 2370 5161 30 0 9 295 316 1886 76 3 1 1192 215 399 385 0 1][3068 199 184 24 3717 48 19 15 3409 10 160 472 81 900 3395 399 0 155 125 140 2107 13 13 2 744 20 679 943 0 5][10775 38 1052 734 8702 313 431 33 4231 16 1237 61 13 606 6539 13 3 19 881 2152 1760 112 3 3 1683 243 278 300 1 1][83 4813 1898 7564 48 287 722 2083 58 1673 2666 4058 3339 3339 228 2322 2 4194 5969 3668 8223 10430 82 64 22 2407 453 730 1 3][2865 3 123 16 1705 11 14 79 1064 9 74 1892 8 378 11148 55 0 8724 497 266 694 9 1 3 168 4 93 38 0 2][2 0 1 0 0 0 0 0 2 0 0 6 1 0 0 0 0 1 0 1 42 1 0 0 0 0 2 1 0 0][7072 134 368 443 2876 66 349 243 1839 3 518 149 836 1567 10913 162 1 63 527 1014 2326 984 7 5 1012 314 246 155 1 4][1322 141 413 98 7387 65 7 218 2441 40 4108 2468 1175 1251 3093 2475 11 185 173 14681 700 1583 21 2 554 13 264 159 0 1][6592 99 102 34 9501 40 10 128 4953 21 960 625 183 2572 8270 45 0 3444 252 113 3001 1284 34 3 1565 74 899 843 1 3][182 896 704 2250 77 70 38 757 41 2271 944 980 884 887 37 1553 1 1076 1532 2022 4 603 2 46 3 576 1390 1266 0 3][5528 95 160 234 4474 3 2 130 2500 7 453 856 8 2544 3706 24 0 827 386 60 633 5 2 0 3472 657 159 76 0 0][104 6 13 2 193 0 0 19 88 0 4 6 2 10 57 3 0 8 21 4 2 0 63 1 4 1 34 8 0 1][31 3 11 1 60 3 0 3 197 0 15 8 8 29 26 84 0 2 4 134 76 3 1 7 19 1 23 12 0 0][23 581 665 254 32 14 28 279 4 100 310 1476 191 435 44 461 0 201 1099 1002 207 142 5 1 0 186 1227 1247 1 0][4140 305 112 1394 2836 5 1 431 1275 109 796 306 371 1814 832 794 0 215 116 210 477 837 0 1 181 31 55 34 0 0][5 4 85 5 3 2 1 3 3 4 4 4 10 3 35 16 0 28 38 5 1 4 1 1 0 2 0 48 1 0][21 4 5 5 0 1 1 2 1 11 19 1 5 10 4 13 0 3 6 12 2 8 0 0 0 5 9 1 0 0][0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 4 1 0 0 0 0 0 1 1 0 2 0][8 0 0 0 3 0 0 0 15 0 0 0 0 0 15 0 0 0 0 0 15 0 0 0 0 0 0 0 0 0]]B/h2s[[9 53 35 53 7 23 25 26 23 3 71 235 75 192 5 49 5 89 72 42 70 31 7 11 3 10 30 20 0 0][168 7 11 3 151 1 2 3 51 1 3 61 12 1 200 3 1 209 5 4 130 2 1 1 108 2 11 10 0 1][100 4 8 19 189 3 2 247 40 0 12 35 6 9 214 9 0 30 18 11 21 6 0 1 8 33 20 15 0 0][178 3 6 3 128 7 2 6 89 6 3 30 9 75 421 29 0 102 16 4 56 54 1 1 11 1 22 11 0 1][19 6 24 52 10 13 15 5 10 14 19 60 29 66 14 18 2 67 48 32 63 125 4 51 2 12 14 7 0 0][79 4 7 2 44 4 1 1 115 1 2 32 4 4 87 5 0 95 6 5 24 0 1 1 3 1 9 4 0 1][70 15 1 8 48 1 0 6 20 0 0 18 7 4 73 11 0 57 5 7 20 1 1 1 4 0 7 4 0 1][149 3 15 20 84 2 1 0 38 0 8 101 6 25 226 14 0 102 9 9 52 8 3 0 22 7 10 4 0 4][16 9 23 36 18 10 16 3 37 0 9 15 20 178 14 22 3 17 48 52 3 36 1 6 0 14 33 6 0 0][424 1 13 31 632 1 0 0 187 1 0 1 6 0 72 1 0 2 101 1 38 1 0 0 0 1 15 1 0 0][300 2 4 177 43 4 2 4 36 1 3 91 4 27 326 5 0 229 11 17 76 40 1 0 16 1 16 9 0 4][124 1 8 5 183 3 2 7 183 1 5 6 3 4 96 11 0 3 8 9 82 4 0 1 12 11 15 10 0 0][422 10 12 7 163 7 15 5 251 2 5 44 10 38 284 17 0 18 26 10 94 5 11 2 66 4 17 7 0 3][673 8 8 14 591 3 14 8 101 0 7 2 3 6 211 8 0 3 12 18 18 3 1 1 41 2 11 5 0 0][3 164 35 169 5 12 11 17 6 3 30 75 28 79 12 101 0 90 116 52 14 48 5 6 1 15 17 10 0 0][304 1 26 11 176 8 9 46 57 1 4 124 5 9 1049 19 0 906 43 10 41 7 1 1 5 3 25 11 0 2][2 0 1 0 0 0 0 0 1 0 0 5 0 0 0 0 0 1 0 1 13 1 0 0 0 0 1 1 0 0][179 3 11 9 178 5 4 5 58 1 7 8 14 8 243 11 0 4 11 18 69 5 1 3 32 2 33 21 0 1][175 44 73 34 187 5 4 40 79 4 87 177 64 65 173 213 8 25 46 418 74 115 9 2 36 8 24 15 0 1][375 5 9 4 304 4 3 38 82 4 11 11 12 4 343 10 0 135 14 7 69 41 9 3 87 7 16 8 0 2][5 23 6 24 4 3 3 16 3 4 30 19 26 51 1 27 0 45 56 23 0 34 1 4 0 9 11 8 0 0][188 3 5 11 309 3 2 13 108 1 3 70 3 9 99 6 0 35 25 4 12 4 2 0 210 50 18 9 0 0][34 0 11 1 39 0 0 15 52 0 1 1 2 1 29 2 0 4 4 3 1 0 3 1 1 0 5 5 0 1][4 2 2 0 5 1 0 1 9 0 0 6 4 0 0 5 0 2 3 3 2 2 0 4 1 0 6 3 0 0][6 1 1 1 5 0 0 0 0 0 1 1 1 0 18 2 0 0 4 1 2 1 0 0 0 1 13 2 0 0][291 24 5 76 88 1 0 11 16 8 35 33 16 33 27 35 0 11 5 6 16 37 0 0 1 4 7 5 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0][0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]B/klartext{(ABCDEFGHIJKLMNOPQRSTUVWXYZ.,'¨)}B/zeilen[3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1]B/koordinaten[[0 3][1 3][2 3][3 3][4 3][6 3][7 3][8 3][9 3][10 3][11 3][0 2][1 2][2 2][3 2][4 2][6 2][7 2][8 2][9 2][10 2][11 2][1 1][2 1][3 1][4 1][6 1][7 1][8 1][9 1][0 1][10 1]]B/fingertab[-5 -4 -3 -2 -2 2 2 3 4 5 5 -5 -4 -3 -2 -2 2 2 3 4 5 5 -4 -3 -2 -2 2 2 3 4 -5 5]B/shift[31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30 30 30 30 31 31 31 31 31 30 30 30]B/minzeile 1 b/maxzeile 3 b/skala 1 b/minx 1 b/minixoff -0 b/miniyoff -1 b/minihoehe 3 b/miniweite 12 b/schrift{findfont 0.3 scalefont setfont}B/neuerfont{findfont dup length dict begin{b}forall/Encoding ISOLatin1Encoding b currentdict end definefont pop}B/BSchrift/Courier-Bold neuerfont
/n 30 b/N 32 b/zz 5 b/mf 2 b/xf 5 b/tmp 2 array B/rot{3 2 roll}B/-rot{3 1 roll}B/over{1 index}B/2dup{2 copy}B/nip{exch pop}B/tuck{exch over}B/2drop{pop pop}B/3drop{2drop pop}B/2swap{4 2 roll}B/l{1 sub 0 1 rot}B/L{length l}B/R{grestore}B/S{gsave}B/T{translate}B/@{exch get}B/?{ifelse}B/max{2dup gt{pop}{nip}?}B/min{2dup gt{nip}{pop}?}B/hypot{dup mul exch dup mul add sqrt}B/lf{dup L{over exch 0 put}for pop}B/lF{dup L{over @ lf}for pop}B/arraymax{tuck L{2 index @ max}for nip}B/arraysumme{tuck L{2 index @ add}for nip}B/addinsarray{2 index 2 index get add put}B/addarrays{dup L{2dup get 3 index -rot addinsarray}for 2drop}B/submaxvonarray{2 index 2 index get exch sub 0 max put}B/submaxarrays{dup L{2dup get 3 index -rot submaxvonarray}for 2drop}B/submaxmatrizen{dup L{2dup get 3 index rot get exch submaxarrays}for 2drop}B/switch{@ exec}B/t{transparenz{/Multiply .setblendmode alpha .setfillconstantalpha alpha .setstrokeconstantalpha }if}B/buchstabe{over length over le{2drop(Sh)}{1 getinterval}?}B/zeile{zeilen @}B/finger{fingertab @}B/buchstabentab[256{-1}repeat]B n l{klartext over get buchstabentab -rot exch put}for/koordinate{koordinaten @ aload pop}B/gruppe{dup finger 0 lt{0}{zz}? exch zeile add}B/klassifiziere{2dup eq{2drop 1}{finger exch finger 2dup mul 0 lt{2drop 0}{2dup eq{2drop 6}{abs exch abs 2dup lt{sub abs 1 eq{3}{5}?}{sub abs 1 eq{2}{4}?}?}?}?}?}B/klassifikationstab[N l{[exch N l{over klassifiziere exch}for pop]}for]B/bigrammklasse{exch klassifikationstab @ @}B/einmax 0 h1a arraymax b/bimax 0 h2a L{h2a @ arraymax}for b/einsumme 0 h1a arraysumme b/bisumme 0 h2a L{h2a @ arraysumme}for h2s L{h2s @ arraysumme}for b/ph1a N array B/ph1A N array B/ph1s n array B/ph2a[N{n array}repeat]B/ph2A[N{n array}repeat]B/ph2s[n{n array}repeat]B/perm1{n l{over exch 4 index over get buchstabentab @ 4 index @ put}for 3drop}B/perm2{n l{3 index over get buchstabentab @ 3 index @ 2 index rot get 4 index -rot perm1}for 3drop}B/setze{rot 2 index 2 index 2 index h2s ph2s perm2 2 index h2a rot perm2 over h1s ph1s perm1 h1a exch perm1 n 1 over 1 add{2 index over 0 put over @ lf}for h1s L{shift over get 2dup exch ph1s @ 5 index -rot addinsarray 2 index @ exch ph2s @ addarrays}for 2drop}B/zentriert{dup stringwidth pop -0.5 mul 0 rmoveto show}B/zzahl{mitZahlen{(000000000000)cvs zentriert}{pop}?}B/zeigebuchstabe{S pop 0.5 0.5 moveto zentriert 0.2 dup scale tmp 1 get 2.5 2.1 moveto zzahl R}B/skgrau{sqrt 0.95 mul 0.95 exch sub setgray}B/skrgb{4 3 roll sqrt 0.95 mul 0.05 add 4 1 roll 3{1 sub 3 index mul 1 add rot}repeat setrgbcolor pop}B/Q{0.1 0.1 0.8 0.8 rectfill 0 setgray tmp 1 get 0.5 0.12 moveto zzahl}B/K{0.05 setlinewidth newpath 0.1 0.1 moveto 0.9 0.9 lineto 0.1 0.9 moveto 0.9 0.1 lineto stroke}B/minitastatur{S t 0.03 0 0.94 dup minihoehe mul miniweite div rectfill R dup L{S 0.03 0 T 0.94 miniweite div dup scale minixoff miniyoff T 2dup get dup tmp 1 rot put bimax div over koordinate T 3 index rot bigrammklasse[{0 0.7 0 skrgb Q}{0 0.7 0 skrgb K}{0.9 0.7 0 skrgb Q}{0.9 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.2 0.9 0 skrgb Q}{0.9 0 0 skrgb Q}]switch R}for 2drop}B/taste{over buchstabe over ph1a @ dup tmp 1 rot put einmax div skgrau over zeigebuchstabe mitmini{dup ph2a @ minitastatur}{pop}?}B/diffpkt{rot sub -rot exch sub exch}B/skpunkt{rot over mul -rot mul}B/kurve{0.4 -0.2 2dup hypot 0.15 exch div skpunkt newpath moveto dup 0.4 -0.2 rot skpunkt rot dup 0.6 -0.2 rot skpunkt rot 0.4 -0.2 2dup hypot 0.15 exch div skpunkt -rot sub tmp 1 2 index put/Pattern setcolorspace<</PatternType 2/Shading<</ShadingType 2/ColorSpace/DeviceRGB/Coords[0 0 tmp 1 get 0]/Extend[true true]/Function<</Domain[0 1]/FunctionType 0/Range[0 1 0 1 0 1]/DataSource tmp 0 get/BitsPerSample 8/Size[2]>>>>>>matrix makepattern setcolor exch curveto stroke}B/linien{S dup koordinate T 1 setlinecap t over L{2dup eq{pop}{2dup bigrammklasse[<FFFFFF00FFFF><FFFFFFFFFFFF><FFFFFF8000FF><FFFFFF4000FF><FFFFFF0080FF><FFFFFF00E0FF><FFFFFFFF00FF>]over get tmp 0 rot put 0 eq{pop}{2 index over get bimax div dup minFuerKurve gt{maxkurvendicke mul setlinewidth over koordinate rot koordinate diffpkt 2dup exch atan S rotate hypot over finger 0 lt{1 -1 scale}if kurve R}{2drop}?}?}?}for 2drop R}B/gruppenzahl 2 zz mul b/fsum 11 array B/fsumA 11 array B/gsum gruppenzahl array B/gsumA gruppenzahl array B/bsum[11{21 array}repeat]B/bsumA[11{21 array}repeat]B/zsum[gruppenzahl{zz array}repeat]B/zsumA[gruppenzahl{zz array}repeat]B/fingerhaeufigkeit{dup lf over L{2dup finger 5 add rot 4 index @ addinsarray}for 2drop}B/gruppenhaeufigkeit{dup lf over L{2dup gruppe rot 4 index @ addinsarray}for 2drop}B/unterklasse{2dup bigrammklasse dup 3 mul 4 1 roll[{2drop 0}dup{zeile exch zeile sub abs}dup{2drop 0}dup{koordinate rot koordinate diffpkt hypot kollschritt div floor 2 min 0 max cvi}]switch}B/bigrammsumme1{over L{2dup unterklasse 4 index 4 3 roll get -rot over add 1 exch{over 5 index -rot addinsarray}for pop}for 3drop}B/bigrammhaeufigkeit{dup lF over L{2dup finger 5 add get over 4 index @ rot bigrammsumme1}for 2drop}B/zssumme1{finger over L{2dup finger mul 0 gt{2 index over get exch zeile 4 index -rot exch addinsarray}{pop}?}for 3drop}B/zshaeufigkeit{dup lF over L{2dup gruppe get over 4 index @ rot zssumme1}for 2drop}B/umrandung{0.25 setgray 0.003 setlinewidth 0 0 0.8 0.12 rectstroke}B/zahlimkaestchen{S 0.25 setgray 0.4 0.017 moveto 0.4 dup scale zzahl R}B/hkaestchen{0.75 setgray over exch einsumme mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung zahlimkaestchen}B/bigrammfarben[[0 1 0][0 0 1][1 0 0][]dup dup[1 1 0.5][1 0.85 0.25][1 0.7 0][1 1 0.5][1 0.85 0.25][1 0.7 0][]dup 2dup 2dup[1 0.75 0.75][1 0.4 0.4][1 0 0]]B/bkaestchen{over 4 1 roll 1 exch{bigrammfarben over get aload pop setrgbcolor over @ bisumme bikaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill}for umrandung @ zahlimkaestchen}B/zsfarbe[[[0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5][0.5 0.5 0.5]][[0.5 0.5 0.5][0 1 0][1 0.7 0][1 0 0][1 0 0]][[0.5 0.5 0.5][1 0.5 0][0 1 0][1 0.7 0][1 0 0]][[0.5 0.5 0.5][1 0 0][1 0.5 0][0 1 0][1 0.7 0]][[0.5 0.5 0.5][1 0 0][1 0 0][1 0.7 0][0 1 0]]]B/zkaestchen{minzeile 1 maxzeile{2dup get aload pop setrgbcolor 2 index over get bisumme zhkaestchen mul div 0.8 mul 0.12 0 0 2swap rectfill umrandung 2 index @ zahlimkaestchen 0.8 0.07 T}for 2drop}B/anzeigen{S beschrx beschry moveto beschrgr dup scale{S show R 0 -0.27 rmoveto}forall R ph1a L{S 0.4 -0.55 T ph2a over get exch linien R}for ph1a L{S dup koordinate 1 sub T 0.8 dup scale over taste R}for pop mitSummen{fsum L{dup 5 sub abs dup mf ge exch xf le and{S dup dup 5 lt{2}{1}? minx sub add -0.3 T dup fsum @ fhkaestchen hkaestchen 0.15 -0.1 T 0.625 dup scale dup bsum @ dup 18 20 bkaestchen over dup 5 lt{0.4}{-0.4}? -0.15 T 5 sub abs dup mf ne{over 9 11 bkaestchen}if rot 5 lt{-0.8}{0.8}? -0.08 T xf ne{6 8 bkaestchen}{pop}? R}{pop}?}for gsum L{dup zz mod dup minzeile ge exch maxzeile le and{S dup zz idiv 12.5 mul 0.25 sub over zz mod 1 sub T 90 rotate dup gsum @ ghkaestchen hkaestchen -0.1 -0.14 T 1.25 maxzeile minzeile sub 1 add div dup scale zsum over get exch zz mod zsfarbe @ zkaestchen R}{pop}?}for}if}B/adirekt{over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit}if anzeigen}B/adiff{ph1A ph2A setze over ph1a ph2a setze mitSummen{ph1a fsum fingerhaeufigkeit ph1a gsum gruppenhaeufigkeit ph2a bsum bigrammhaeufigkeit ph2a zsum zshaeufigkeit ph1A fsumA fingerhaeufigkeit ph1A gsumA gruppenhaeufigkeit ph2A bsumA bigrammhaeufigkeit ph2A zsumA zshaeufigkeit fsum fsumA submaxarrays gsum gsumA submaxarrays bsum bsumA submaxmatrizen zsum zsumA submaxmatrizen ph1a ph1A submaxarrays ph2a ph2A submaxmatrizen}if anzeigen}B/an{S adirekt 0 4 skala div T adirekt showpage R}B/ad{S over exch 4 index adiff 0 4 skala div T adiff showpage R}B/M{S 3 index adiff 0 4 skala div T adirekt showpage R}B/A{differenzen{ad}{an}?}B/E{S 0 2 T adirekt showpage grestore}B
%%EndProlog
%%BeginSetup
<</PageSize[842 595]>> setpagedevice 65 skala mul dup scale 0.5 1.7 T/BSchrift schrift
%%EndSetup
%%Page: 1 1
(QKOUYVDCLFJHAEI,GTRNS¨Z'.XBPMW)[(anymak:END czech)]E
%%EOF
